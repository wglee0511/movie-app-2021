{"version":3,"sources":["styles/theme.js","components/Input.js","components/Navbar.js","apis/api.js","Context/ApiContext.js","components/Loader.js","components/fragment/Movies.js","components/Movie.js","components/fragment/TvPrograms.js","components/TvProgram.js","components/Search.js","components/MainMovie.js","components/Slider.js","components/Home.js","components/Detail/MovieDetail.js","components/Detail/Season.js","components/Detail/TvDetail.js","App.js","styles/GlobalStyles.js","styles/ResponsiveStyles.js","index.js"],"names":["theme","BannerColor","NavBgColor","ButtonColor","BgColor","EtcColor","FontColor","nowContents","popContents","topContents","Wrapper","styled","div","attrs","className","StyledForm","form","StyledInput","input","Input","useState","keyword","setKeyword","onSubmit","event","preventDefault","document","location","href","aria-hidden","focusable","data-prefix","data-icon","class","role","xmlns","viewBox","fill","d","onChange","innnerWord","target","value","type","placeholder","NavDiv","header","BannerNavWrapper","BannerText","Link","NavWrapper","EachLink","props","current","BannerNav","EachNav","withRouter","pathname","to","api","axios","create","baseURL","params","api_key","language","seachForApi","query","apis","movies","getNowPlayMovies","get","getPopMovies","getTopRatedMovies","getDetailMovie","movie_id","getVideoMovie","tvprograms","getOnTheAirPrograms","getPopPrograms","getTopRatedPrograms","getDetailPrograms","tv_id","search","getSearchMovie","getSearchProgram","baseUrl","youTubeUrl","ApiContext","createContext","ApiProvider","isLoading","setIsLoading","firstMovie","setFirstMovie","now","setNow","pop","setPop","top","setTop","onAirTv","setOnAirTv","popTv","setPopTv","topTv","setTopTv","useEffect","a","apiNowData","nowData","data","results","apiPopData","popData","apiTopData","topData","apiOnAir","onAirData","apiPopTv","popTvData","apiTopTv","topTvData","id","overview","poster_path","title","vote_average","console","log","Provider","children","Loader","width","height","strokeWidth","strokeLinecap","cx","cy","r","MoviesDiv","MovieDiv","StyledLink","ImageDiv","TittleDiv","ScoreDiv","Movies","movieData","length","map","each","posterUrl","style","background","backgroundPosition","backgroundSize","LoaderWrapper","TitleText","h1","Movie","apiContext","useContext","Helmet","TvPrograms","tvData","name","TvProgram","Search","setMovieData","setTvData","useRouteMatch","movieSearch","tvSearch","movieResults","tvResults","BackgroundLayer","TextDiv","Title","OverView","h3","TextMiddleDiv","TextBottonDiv","TextAverage","MainMovie","MovieWrapper","TvWrapper","Tittle","RatingScore","Slider","popMovie","spaceBetween","breakpoints","480","slidesPerView","640","1060","onSlideChange","onSwiper","swiper","release_date","MainFrameDiv","SliderDiv","Home","BackgroundDiv","BackgroundLayerDiv","PosterDiv","ContentsDiv","Genre","h2","NavMenu","ul","EachMenu","li","ContentDiv","VideoDiv","MovieDetail","detailData","setDetailData","useParams","match","path","url","response","videoData","videoUrl","key","genres","homepage","tagline","runtime","fullPosterUrl","youtubeUrl","year","Date","getFullYear","src","exact","GridContent","GridImageDiv","NameHead","YearHead","Season","seasons","air_date","episode_count","fullPosterSeason","TvDetail","episode_run_time","last_air_date","alt","App","Navbar","GlobalStyles","createGlobalStyle","reset","ResponsiveStyles","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6baef6c.chunk.js","sourcesContent":["const theme = {\r\n  BannerColor: \"red\",\r\n  NavBgColor: \"black\",\r\n  ButtonColor: \"#393e46\",\r\n  BgColor: \"black\",\r\n  EtcColor: \"#ffd369\",\r\n  FontColor: \"#eeeeee\",\r\n  nowContents: \"새로운 컨텐츠\",\r\n  popContents: \"지금 인기있는 컨텐츠\",\r\n  topContents: \"사랑받고 있는 컨텐츠\"\r\n};\r\n\r\nexport default theme;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../styles/theme\";\r\n\r\nconst Wrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  height: 100%;\r\n  margin-right: 10px;\r\n`;\r\nconst StyledForm = styled.form`\r\n  height: 100%;\r\n  display: flex;\r\n  font-size: 30px;\r\n\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  color: ${theme.FontColor};\r\n  background-color: transparent;\r\n  border: solid 2px ${theme.FontColor};\r\n  border-radius: 5px;\r\n  height: 35px;\r\n  font-size: 17px;\r\n  transition: 0.4s;\r\n  width: 60%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Input = () => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    document.location.href = `/search/${keyword}`;\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    const innnerWord = event.target.value;\r\n    setKeyword(innnerWord);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledForm onSubmit={handleOnSubmit}>\r\n        <svg\r\n          aria-hidden=\"true\"\r\n          focusable=\"false\"\r\n          data-prefix=\"fas\"\r\n          data-icon=\"search\"\r\n          class=\"svg-inline--fa fa-search fa-w-16\"\r\n          role=\"img\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n        >\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"\r\n          ></path>\r\n        </svg>\r\n\r\n        <StyledInput\r\n          onChange={handleOnChange}\r\n          type=\"text\"\r\n          placeholder=\"제목\"\r\n          value={keyword}\r\n        />\r\n      </StyledForm>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport theme from \"../styles/theme\";\r\nimport Input from \"./Input\";\r\n\r\nconst NavDiv = styled.header.attrs({\r\n  className: \"nav-div\",\r\n})`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  color: ${theme.FontColor};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${theme.NavBgColor};\r\n  z-index: 10;\r\n`;\r\n\r\nconst BannerNavWrapper = styled.div.attrs({\r\n  className: \"nav-div-wrapper\",\r\n})`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${theme.NavBgColor};\r\n`;\r\n\r\nconst BannerText = styled(Link)`\r\n  font-weight: 800;\r\n  font-size: 30px;\r\n  color: ${theme.BannerColor};\r\n`;\r\n\r\nconst NavWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst EachLink = styled(Link)`\r\n  margin: 0 10px 0 10px;\r\n  font-weight: 800;\r\n  font-size: 15px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? theme.EtcColor : \"transparent\")};\r\n`;\r\n\r\nconst BannerNav = styled.div`\r\n  margin: 15px 15px 15px 15px;\r\n`;\r\n\r\nconst EachNav = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <NavDiv>\r\n    <BannerNavWrapper>\r\n      <BannerNav>\r\n        <BannerText to=\"/\">Ratflix</BannerText>\r\n      </BannerNav>\r\n      <NavWrapper>\r\n        <EachNav>\r\n          <EachLink to=\"/\" current={pathname === \"/\"}>\r\n            Home\r\n          </EachLink>\r\n        </EachNav>\r\n        <EachNav>\r\n          <EachLink to=\"/movies\" current={pathname === \"/movies\"}>\r\n            Movies\r\n          </EachLink>\r\n        </EachNav>\r\n        <EachNav>\r\n          <EachLink to=\"/tv\" current={pathname === \"/tv\"}>\r\n            TV\r\n          </EachLink>\r\n        </EachNav>\r\n      </NavWrapper>\r\n    </BannerNavWrapper>\r\n    <Input />\r\n  </NavDiv>\r\n));\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"b5e85de9c4ef4fd54037405bf63ab4d7\",\r\n    language: \"ko-KR\",\r\n  },\r\n});\r\n\r\nconst seachForApi = (keyword) =>\r\n  axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n      api_key: \"b5e85de9c4ef4fd54037405bf63ab4d7\",\r\n      language: \"ko-KR\",\r\n      query: `${keyword}`,\r\n    },\r\n  });\r\n\r\nconst getNowPlayMovies = api.get(\"movie/now_playing/\");\r\nconst getPopMovies = api.get(\"movie/popular/\");\r\nconst getTopRatedMovies = api.get(\"movie/top_rated/\");\r\nconst getDetailMovie = (movie_id) => api.get(`movie/${movie_id}`);\r\nconst getVideoMovie = (movie_id) => api.get(`movie/${movie_id}/videos`);\r\n\r\nconst getOnTheAirPrograms = api.get(\"tv/on_the_air/\");\r\nconst getPopPrograms = api.get(\"tv/popular/\");\r\nconst getTopRatedPrograms = api.get(\"tv/top_rated/\");\r\nconst getDetailPrograms = (tv_id) => api.get(`tv/${tv_id}`);\r\n\r\nconst getSearchMovie = (keyword) => seachForApi(keyword).get(\"search/movie\");\r\nconst getSearchProgram = (keyword) => seachForApi(keyword).get(\"search/tv\");\r\n\r\nconst apis = {\r\n  movies: {\r\n    getNowPlayMovies,\r\n    getPopMovies,\r\n    getTopRatedMovies,\r\n    getDetailMovie,\r\n    getVideoMovie,\r\n  },\r\n  tvprograms: {\r\n    getOnTheAirPrograms,\r\n    getPopPrograms,\r\n    getTopRatedPrograms,\r\n    getDetailPrograms,\r\n  },\r\n  search: {\r\n    getSearchMovie,\r\n    getSearchProgram,\r\n  },\r\n  baseUrl: \"https://image.tmdb.org/t/p/w500\",\r\n  youTubeUrl: \"https://www.youtube.com/watch?v=\",\r\n};\r\n\r\nexport default apis;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport apis from \"../apis/api\";\r\n\r\nconst ApiContext = createContext();\r\n\r\nconst ApiProvider = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [firstMovie, setFirstMovie] = useState({});\r\n  const [now, setNow] = useState([]);\r\n  const [pop, setPop] = useState([]);\r\n  const [top, setTop] = useState([]);\r\n  const [onAirTv, setOnAirTv] = useState([]);\r\n  const [popTv, setPopTv] = useState([]);\r\n  const [topTv, setTopTv] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        //movie\r\n        const apiNowData = await apis.movies.getNowPlayMovies;\r\n        const nowData = apiNowData.data.results;\r\n\r\n        const apiPopData = await apis.movies.getPopMovies;\r\n        const popData = apiPopData.data.results;\r\n\r\n        const apiTopData = await apis.movies.getTopRatedMovies;\r\n        const topData = apiTopData.data.results;\r\n        //tv\r\n        const apiOnAir = await apis.tvprograms.getOnTheAirPrograms;\r\n        const onAirData = apiOnAir.data.results;\r\n\r\n        const apiPopTv = await apis.tvprograms.getPopPrograms;\r\n        const popTvData = apiPopTv.data.results;\r\n\r\n        const apiTopTv = await apis.tvprograms.getOnTheAirPrograms;\r\n        const topTvData = apiTopTv.data.results;\r\n\r\n        //movie\r\n        setNow(nowData);\r\n        setPop(popData);\r\n        setTop(topData);\r\n        //tv\r\n        setOnAirTv(onAirData);\r\n        setPopTv(popTvData);\r\n        setTopTv(topTvData);\r\n\r\n        setFirstMovie({\r\n          id: popData[0].id,\r\n          overview: popData[0].overview,\r\n          poster_path: popData[0].poster_path,\r\n          title: popData[0].title,\r\n          vote_average: popData[0].vote_average,\r\n        });\r\n\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const value = { isLoading, now, pop, top, onAirTv, popTv, topTv, firstMovie };\r\n  return (\r\n    <ApiContext.Provider value={value}>{props.children}</ApiContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ApiContext, ApiProvider };\r\n","import React from \"react\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <svg\r\n      className=\"spinner\"\r\n      width=\"65px\"\r\n      height=\"65px\"\r\n      viewBox=\"0 0 66 66\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle\r\n        className=\"path\"\r\n        fill=\"none\"\r\n        strokeWidth=\"6\"\r\n        strokeLinecap=\"round\"\r\n        cx=\"33\"\r\n        cy=\"33\"\r\n        r=\"30\"\r\n      ></circle>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\n\r\nconst MoviesDiv = styled.div.attrs({\r\n  className: \"grid-box\",\r\n})`\r\n  display: grid;\r\n  grid-gap: 15px;\r\n`;\r\n\r\nconst MovieDiv = styled.div`\r\n  width: 100%;\r\n  :hover {\r\n    .score-text {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)``;\r\n\r\nconst ImageDiv = styled.div`\r\n  height: 20vh;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst TittleDiv = styled.div`\r\n  color: ${theme.FontColor};\r\n  margin: 1vh 0 1vh 0;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst ScoreDiv = styled.div.attrs({\r\n  className: \"score-text\",\r\n})`\r\n  color: ${theme.EtcColor};\r\n  font-size: 15px;\r\n  font-weight: 800;\r\n  margin: 0 5px 5px 0;\r\n  display: none;\r\n`;\r\n\r\nconst Movies = (props) => {\r\n  const { movieData } = props;\r\n\r\n  if (movieData.length !== 0) {\r\n    return (\r\n      <MoviesDiv>\r\n        {movieData?.map((each) => {\r\n          const { id, vote_average, title, poster_path } = each;\r\n          const posterUrl = `${apis.baseUrl + poster_path}`;\r\n          return (\r\n            <MovieDiv>\r\n              <StyledLink key={id} to={`/movies/${id}`}>\r\n                <ImageDiv\r\n                  style={{\r\n                    background: `url(${posterUrl})`,\r\n                    backgroundPosition: \"center center\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <ScoreDiv>{`${vote_average} / 10.0`}</ScoreDiv>\r\n                </ImageDiv>\r\n              </StyledLink>\r\n              <TittleDiv>{title}</TittleDiv>{\" \"}\r\n            </MovieDiv>\r\n          );\r\n        })}\r\n      </MoviesDiv>\r\n    );\r\n  } else if (movieData.length === 0) {\r\n    return <TittleDiv>검색결과가 없습니다.</TittleDiv>;\r\n  }\r\n};\r\n\r\nexport default Movies;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ApiContext } from \"../Context/ApiContext\";\r\nimport theme from \"../styles/theme\";\r\nimport Loader from \"./Loader\";\r\nimport Movies from \"./fragment/Movies\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 8vh 10px 10px 10px;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\nconst TitleText = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 800;\r\n  margin-bottom: 3vh;\r\n  margin-top: 3vh;\r\n`;\r\n\r\nconst Movie = (props) => {\r\n  const apiContext = useContext(ApiContext);\r\n  const { now, pop, top, isLoading } = apiContext;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>Movies - Ratflix</title>\r\n      </Helmet>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <TitleText>{`${theme.nowContents}`}</TitleText>\r\n          <Movies movieData={now} />\r\n\r\n          <TitleText>{`${theme.popContents}`}</TitleText>\r\n          <Movies movieData={pop} />\r\n\r\n          <TitleText>{`${theme.topContents}`}</TitleText>\r\n          <Movies movieData={top} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api.js\";\r\nimport theme from \"../../styles/theme.js\";\r\n\r\nconst MoviesDiv = styled.div.attrs({\r\n  className: \"grid-box\",\r\n})`\r\n  display: grid;\r\n  grid-gap: 15px;\r\n`;\r\n\r\nconst MovieDiv = styled.div`\r\n  width: 100%;\r\n  :hover {\r\n    .score-text {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)``;\r\n\r\nconst ImageDiv = styled.div`\r\n  height: 20vh;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst TittleDiv = styled.div`\r\n  color: ${theme.FontColor};\r\n  margin: 1vh 0 1vh 0;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst ScoreDiv = styled.div.attrs({\r\n  className: \"score-text\",\r\n})`\r\n  color: ${theme.EtcColor};\r\n  font-size: 15px;\r\n  font-weight: 800;\r\n  margin: 0 5px 5px 0;\r\n  display: none;\r\n`;\r\n\r\nconst TvPrograms = (props) => {\r\n  const tvData = props.tvData;\r\n  if (tvData.length !== 0) {\r\n    return (\r\n      <MoviesDiv>\r\n        {tvData.map((each) => {\r\n          const { id, vote_average, name, poster_path } = each;\r\n          const posterUrl = `${apis.baseUrl + poster_path}`;\r\n          return (\r\n            <MovieDiv>\r\n              <StyledLink key={id} to={`/tv/${id}`}>\r\n                <ImageDiv\r\n                  style={{\r\n                    background: `url(${posterUrl})`,\r\n                    backgroundPosition: \"center center\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <ScoreDiv>{`${vote_average} / 10.0`}</ScoreDiv>\r\n                </ImageDiv>\r\n              </StyledLink>\r\n              <TittleDiv>{name}</TittleDiv>{\" \"}\r\n            </MovieDiv>\r\n          );\r\n        })}\r\n      </MoviesDiv>\r\n    );\r\n  } else if (tvData.length === 0) {\r\n    return <TittleDiv>검색결과가 없습니다.</TittleDiv>;\r\n  }\r\n};\r\n\r\nexport default TvPrograms;\r\n","import React, { useContext } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport { ApiContext } from \"../Context/ApiContext\";\r\nimport theme from \"../styles/theme\";\r\nimport TvPrograms from \"./fragment/TvPrograms\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 8vh 10px 10px 10px;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst TitleText = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 800;\r\n  margin-bottom: 3vh;\r\n  margin-top: 3vh;\r\n`;\r\n\r\nconst TvProgram = (props) => {\r\n  const apiContext = useContext(ApiContext);\r\n  const { onAirTv, popTv, topTv, isLoading } = apiContext;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>TV programs - Ratflix</title>\r\n      </Helmet>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <TitleText>{`${theme.nowContents}`}</TitleText>\r\n          <TvPrograms tvData={onAirTv} />\r\n\r\n          <TitleText>{`${theme.popContents}`}</TitleText>\r\n          <TvPrograms tvData={popTv} />\r\n\r\n          <TitleText>{`${theme.topContents}`}</TitleText>\r\n          <TvPrograms tvData={topTv} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TvProgram;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport theme from \"../styles/theme\";\r\nimport Movies from \"./fragment/Movies\";\r\nimport TvPrograms from \"./fragment/TvPrograms\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 8vh 10px 10px 10px;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\nconst TitleText = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 800;\r\n  margin-bottom: 3vh;\r\n  margin-top: 3vh;\r\n`;\r\n\r\nconst Search = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [tvData, setTvData] = useState([]);\r\n  const match = useRouteMatch();\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const movieSearch = await apis.search.getSearchMovie(keyword);\r\n        const tvSearch = await apis.search.getSearchProgram(keyword);\r\n        const movieResults = movieSearch.data.results;\r\n        const tvResults = tvSearch.data.results;\r\n        setMovieData(movieResults);\r\n        setTvData(tvResults);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <>\r\n          <Helmet>\r\n            <title>Loading</title>\r\n          </Helmet>\r\n          <LoaderWrapper>\r\n            <Loader />\r\n          </LoaderWrapper>\r\n        </>\r\n      )}\r\n      <Helmet>\r\n        <title>{`${keyword}`} - Ratflix</title>\r\n      </Helmet>\r\n      {!isLoading && (\r\n        <>\r\n          <TitleText>{`${keyword} : 영화 검색 결과`}</TitleText>\r\n          <Movies movieData={movieData} />\r\n        </>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <TitleText>{`${keyword} : TV프로그램 검색 결과`}</TitleText>\r\n          <TvPrograms tvData={tvData} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport { ApiContext } from \"../Context/ApiContext\";\r\nimport theme from \"../styles/theme\";\r\n\r\nconst Wrapper = styled.div.attrs({\r\n  className: \"main-wrapper\",\r\n})`\r\n  margin-top: 7vh;\r\n  height: 60vh;\r\n  width: 100%;\r\n  color: ${theme.FontColor};\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst BackgroundLayer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  padding: 10px 10px 10px 10px;\r\n`;\r\n\r\nconst TextDiv = styled.div.attrs({\r\n  className: \"main-textdiv\",\r\n})`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h1.attrs({ className: \"home-maiv-tittle\" })``;\r\n\r\nconst OverView = styled.h3.attrs({ className: \"home-main-over\" })``;\r\n\r\nconst TextMiddleDiv = styled.div``;\r\n\r\nconst TextBottonDiv = styled.div`\r\n  font-size: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst TextAverage = styled.div`\r\n  font-size: 30px;\r\n  color: ${theme.EtcColor};\r\n  padding: 15px 20px 15px 20px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  background-color: ${theme.ButtonColor};\r\n  padding: 15px 20px 15px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst MainMovie = () => {\r\n  const apiContext = useContext(ApiContext);\r\n  const movieData = apiContext.firstMovie;\r\n  const { id, overview, poster_path, title, vote_average } = movieData;\r\n  const posterUrl = `${apis.baseUrl}${poster_path}`;\r\n\r\n  return (\r\n    <Wrapper\r\n      style={{\r\n        background: `url(${posterUrl})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <BackgroundLayer>\r\n        <TextDiv>\r\n          <Title>{title}</Title>\r\n\r\n          <TextMiddleDiv>\r\n            <OverView>{overview}</OverView>\r\n          </TextMiddleDiv>\r\n\r\n          <TextBottonDiv>\r\n            <StyledLink to={`/movies/${id}`}>상세정보</StyledLink>\r\n            <TextAverage>{vote_average} / 10.0</TextAverage>\r\n          </TextBottonDiv>\r\n        </TextDiv>\r\n      </BackgroundLayer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainMovie;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport apis from \"../apis/api\";\r\nimport { ApiContext } from \"../Context/ApiContext\";\r\nimport  theme from \"../styles/theme\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  \r\n\r\n  \r\n`;\r\n\r\nconst MovieWrapper = styled.div`\r\n\r\n`;\r\nconst TvWrapper = styled.div`\r\n  margin-top: 3vh;\r\n\r\n`;\r\n\r\nconst Tittle = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  margin-bottom: 3vh;\r\n`;\r\nconst ImageDiv = styled.div.attrs({\r\n  className: \"swiper-imagediv\"\r\n})`\r\n  height: 240px;\r\n  object-fit: fit;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n  border-radius: 8px;\r\n\r\n  :hover {\r\n    .score-text {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n`;\r\nconst RatingScore = styled.div.attrs({\r\n  className: \"score-text\"\r\n})`\r\ncolor: ${theme.EtcColor};\r\nfont-size: 15px;\r\nfont-weight: 800;\r\nmargin: 0 5px 5px 0;\r\ndisplay: none;\r\n`;\r\n\r\nconst StyledLink = styled(Link)``;\r\n\r\nconst Slider = (props) => {\r\n  const apiContext = useContext(ApiContext);\r\n  const isLoading = apiContext.isLoading;\r\n  const popMovie = apiContext.pop;\r\n  const popTv = apiContext.popTv;\r\n\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MovieWrapper>\r\n        <Tittle>Ratflix 인기 영화 콘텐츠</Tittle>\r\n        <Swiper\r\n          spaceBetween={10}\r\n          breakpoints={\r\n            {\r\n              480: {\r\n                width: 480,\r\n                slidesPerView: 1\r\n              },\r\n              640: {\r\n                width: 640,\r\n                slidesPerView: 2\r\n              },\r\n              1060: {\r\n                width: 1060,\r\n                slidesPerView: 3\r\n              }\r\n            }\r\n          }\r\n\r\n          onSlideChange={() => console.log(\"slide change\")}\r\n          onSwiper={(swiper) => console.log(swiper)}\r\n        >\r\n          {!isLoading &&\r\n            popMovie.map((each) => {\r\n              const { id, vote_average, release_date, poster_path } = each;\r\n              const posterUrl = `${apis.baseUrl + poster_path}`;\r\n              return (\r\n                <SwiperSlide>\r\n                  <StyledLink key={id} to={`/movies/${id}`}>\r\n                    <ImageDiv\r\n                      style={{\r\n                        background: `url(${posterUrl})`,\r\n                        backgroundSize: \"cover\",\r\n                        backgroundPosition: \"center center\"\r\n                        \r\n                      }}\r\n                    >\r\n                      <RatingScore>\r\n                        {`${vote_average} / 10`}\r\n                        </RatingScore></ImageDiv>\r\n                  </StyledLink>\r\n                </SwiperSlide>\r\n              );\r\n            })}\r\n        </Swiper>\r\n      </MovieWrapper>\r\n      <TvWrapper>\r\n        <Tittle>Ratflix 인기 TV 콘텐츠</Tittle>\r\n        <Swiper\r\n          spaceBetween={10}\r\n          breakpoints={\r\n            {\r\n              480: {\r\n                width: 480,\r\n                slidesPerView: 1\r\n              },\r\n              640: {\r\n                width: 640,\r\n                slidesPerView: 2\r\n              },\r\n              1060: {\r\n                width: 1060,\r\n                slidesPerView: 3\r\n              }\r\n            }\r\n          }\r\n          onSlideChange={() => console.log(\"slide change\")}\r\n          onSwiper={(swiper) => console.log(swiper)}\r\n        >\r\n         {!isLoading &&\r\n            popTv.map((each) => {\r\n              const { id, vote_average, release_date, poster_path } = each;\r\n              const posterUrl = `${apis.baseUrl + poster_path}`;\r\n              return (\r\n                <SwiperSlide>\r\n                  <StyledLink key={id} to={`/movies/${id}`}>\r\n                    <ImageDiv\r\n                      style={{\r\n                        background: `url(${posterUrl})`,\r\n                      }}\r\n                    ><RatingScore>\r\n                    {`${vote_average} / 10`}\r\n                    </RatingScore></ImageDiv>\r\n                  </StyledLink>\r\n                </SwiperSlide>\r\n              );\r\n            })}\r\n        </Swiper>\r\n       \r\n      </TvWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React, { useContext } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport { ApiContext } from \"../Context/ApiContext\";\r\nimport theme from \"../styles/theme\";\r\nimport Loader from \"./Loader\";\r\nimport MainMovie from \"./MainMovie\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div.attrs({\r\n  className: \"home-wrapper-div\",\r\n})`\r\n  width: 100%;\r\n`;\r\n\r\nconst MainFrameDiv = styled.div``;\r\n\r\nconst SliderDiv = styled.div`\r\n  color: ${theme.FontColor};\r\n  margin: 50px 10px 50px 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst Home = () => {\r\n  const apiContext = useContext(ApiContext);\r\n  const isLoading = apiContext.isLoading;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>Ratflix</title>\r\n      </Helmet>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <MainFrameDiv>\r\n            <MainMovie />\r\n          </MainFrameDiv>\r\n          <SliderDiv>\r\n            <Slider />\r\n          </SliderDiv>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\nimport Loader from \"../Loader\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 7vh 10px 10px 10px;\r\n  height: 100%;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst BackgroundDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst BackgroundLayerDiv = styled.div.attrs({\r\n  className: \"detail-layout-div\",\r\n})`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PosterDiv = styled.div.attrs({\r\n  className: \"detail-poster-div\",\r\n})`\r\n  padding: 5vh 25px 10vh 0;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\nconst ContentsDiv = styled.div.attrs({\r\n  className: \"detail-contents-div\",\r\n})`\r\n  padding: 5vh 0px 10vh 25px;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Tittle = styled.h1`\r\n  font-size: 27px;\r\n  font-weight: 800;\r\n  line-height: 1.5em;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\nconst Genre = styled.h2`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  line-height: 2.5em;\r\n`;\r\n\r\nconst NavMenu = styled.ul`\r\n  display: flex;\r\n  font-weight: 600;\r\n  align-items: center;\r\n`;\r\nconst EachMenu = styled.li`\r\n  background-color: ${theme.ButtonColor};\r\n  padding: 7px 10px 7px 10px;\r\n  margin-right: 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst ContentDiv = styled.div``;\r\nconst VideoDiv = styled.div`\r\n  margin: 30px 0 0 0;\r\n`;\r\n\r\nconst MovieDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const match = useRouteMatch();\r\n  const { path, url } = match;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await apis.movies.getDetailMovie(id);\r\n        const videoData = await apis.movies.getVideoMovie(id);\r\n        const videoUrl = videoData.data.results[0].key;\r\n        const {\r\n          genres,\r\n          homepage,\r\n          poster_path,\r\n          overview,\r\n          tagline,\r\n          title,\r\n          vote_average,\r\n          runtime,\r\n          release_date,\r\n        } = response.data;\r\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\r\n        const youtubeUrl = `${apis.youTubeUrl}${videoUrl}`;\r\n        const year = new Date(release_date).getFullYear();\r\n        setDetailData({\r\n          genres,\r\n          homepage,\r\n          fullPosterUrl,\r\n          overview,\r\n          tagline,\r\n          title,\r\n          vote_average,\r\n          runtime,\r\n          year,\r\n          youtubeUrl,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <BackgroundDiv\r\n          style={{\r\n            background: `url(${detailData.fullPosterUrl})`,\r\n            backgroundPosition: \"center center\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <BackgroundLayerDiv>\r\n            <PosterDiv>\r\n              <img src={`${detailData.fullPosterUrl}`} style={{}} />\r\n            </PosterDiv>\r\n            <ContentsDiv>\r\n              <Tittle>{detailData.title}</Tittle>\r\n              <Genre>{`${detailData.year} • ${detailData.runtime}min`}</Genre>\r\n              <Genre>\r\n                {detailData?.genres?.map((each) => {\r\n                  const name = each.name;\r\n                  return `${name} `;\r\n                })}\r\n              </Genre>\r\n              <NavMenu>\r\n                <EachMenu>\r\n                  <a target=\"_blank\" href={detailData.homepage}>\r\n                    홈페이지\r\n                  </a>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={url}>\r\n                    설명\r\n                  </NavLink>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={`${url}/video`}>\r\n                    예고\r\n                  </NavLink>\r\n                </EachMenu>\r\n              </NavMenu>\r\n\r\n              <ContentDiv>\r\n                <Switch>\r\n                  <Route exact path={`${path}`}>\r\n                    <Tittle>{detailData.tagline}</Tittle>\r\n                    <Genre>{detailData.overview}</Genre>\r\n                  </Route>\r\n                  <Route exact path={`${path}/video`}>\r\n                    <VideoDiv>\r\n                      <ReactPlayer width=\"100%\" url={detailData.youtubeUrl} />\r\n                    </VideoDiv>\r\n                  </Route>\r\n                </Switch>\r\n              </ContentDiv>\r\n            </ContentsDiv>\r\n          </BackgroundLayerDiv>\r\n        </BackgroundDiv>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\n\r\nconst VideoDiv = styled.div.attrs({\r\n  className: \"grid-box-seaaon\",\r\n})`\r\n  margin: 30px 0 0 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-gap: 15px;\r\n`;\r\nconst GridContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst GridImageDiv = styled.div`\r\n  width: 100%;\r\n  height: 15vh;\r\n`;\r\n\r\nconst NameHead = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\nconst YearHead = styled.h2`\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst Season = (props) => {\r\n  const { seasons } = props;\r\n  console.log(seasons);\r\n  return (\r\n    <VideoDiv>\r\n      {seasons?.map((each) => {\r\n        const { name, poster_path, air_date, episode_count } = each;\r\n        const year = new Date(air_date).getFullYear();\r\n        const fullPosterSeason = `${apis.baseUrl}${poster_path}`;\r\n        if (episode_count !== 0) {\r\n          return (\r\n            <GridContent>\r\n              <GridImageDiv\r\n                style={{\r\n                  background: `url(${fullPosterSeason})`,\r\n                  backgroundPosition: \"center center\",\r\n                  backgroundSize: \"cover\",\r\n                }}\r\n              ></GridImageDiv>\r\n              <div>\r\n                <NameHead>{name}</NameHead>\r\n                <YearHead>{year}</YearHead>\r\n              </div>\r\n            </GridContent>\r\n          );\r\n        }\r\n      })}\r\n    </VideoDiv>\r\n  );\r\n};\r\n\r\nexport default Season;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\nimport Loader from \"../Loader\";\r\nimport Season from \"./Season\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 7vh 10px 10px 10px;\r\n  height: 100%;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst BackgroundDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst BackgroundLayerDiv = styled.div.attrs({\r\n  className: \"detail-layout-div\",\r\n})`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PosterDiv = styled.div.attrs({\r\n  className: \"detail-poster-div\",\r\n})`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst ContentsDiv = styled.div.attrs({\r\n  className: \"detail-contents-div\",\r\n})`\r\n  padding: 5vh 0px 10vh 25px;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Tittle = styled.h1`\r\n  font-size: 27px;\r\n  font-weight: 800;\r\n  line-height: 1.5em;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\nconst Genre = styled.h2`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  line-height: 2.5em;\r\n`;\r\n\r\nconst NavMenu = styled.ul`\r\n  display: flex;\r\n  font-weight: 600;\r\n  align-items: center;\r\n`;\r\nconst EachMenu = styled.li`\r\n  background-color: ${theme.ButtonColor};\r\n  padding: 7px 10px 7px 10px;\r\n  margin-right: 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TvDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const match = useRouteMatch();\r\n  const { path, url } = match;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await apis.tvprograms.getDetailPrograms(id);\r\n        const {\r\n          episode_run_time,\r\n          genres,\r\n          homepage,\r\n          poster_path,\r\n          seasons,\r\n          overview,\r\n          name,\r\n          last_air_date,\r\n        } = response.data;\r\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\r\n        const year = new Date(last_air_date).getFullYear();\r\n        setDetailData({\r\n          genres,\r\n          homepage,\r\n          fullPosterUrl,\r\n          overview,\r\n          name,\r\n          seasons,\r\n          episode_run_time,\r\n          year,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <BackgroundDiv\r\n          style={{\r\n            background: `url(${detailData.fullPosterUrl})`,\r\n            backgroundPosition: \"center center\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <BackgroundLayerDiv>\r\n            <PosterDiv>\r\n              <img src={`${detailData.fullPosterUrl}`} alt={detailData.name} />\r\n            </PosterDiv>\r\n            <ContentsDiv>\r\n              <Tittle>{detailData.name}</Tittle>\r\n              <Genre>{`${detailData.year} • ${detailData.episode_run_time}min`}</Genre>\r\n              <Genre>\r\n                {detailData?.genres?.map((each) => {\r\n                  const name = each.name;\r\n                  return `${name} `;\r\n                })}\r\n              </Genre>\r\n              <NavMenu>\r\n                <EachMenu>\r\n                  <a target=\"_blank\" href={detailData.homepage}>\r\n                    홈페이지\r\n                  </a>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={url}>\r\n                    설명\r\n                  </NavLink>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={`${url}/seasons`}>\r\n                    시즌\r\n                  </NavLink>\r\n                </EachMenu>\r\n              </NavMenu>\r\n\r\n              <ContentDiv>\r\n                <Switch>\r\n                  <Route exact path={`${path}`}>\r\n                    <Genre>{detailData.overview}</Genre>\r\n                  </Route>\r\n                  <Route exact path={`${path}/seasons`}>\r\n                    <Season seasons={detailData.seasons} />\r\n                  </Route>\r\n                </Switch>\r\n              </ContentDiv>\r\n            </ContentsDiv>\r\n          </BackgroundLayerDiv>\r\n        </BackgroundDiv>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TvDetail;\r\n","import React from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Movie from \"./components/Movie\";\r\nimport TvProgram from \"./components/TvProgram\";\r\nimport Search from \"./components/Search\";\r\nimport Home from \"./components/Home\";\r\nimport styled from \"styled-components\";\r\nimport MovieDetail from \"./components/Detail/MovieDetail\";\r\nimport TvDetail from \"./components/Detail/TvDetail\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrapper>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/movies\">\r\n            <Movie />\r\n          </Route>\r\n          <Route exact path=\"/tv\">\r\n            <TvProgram />\r\n          </Route>\r\n          <Route exact path=\"/search/:keyword\">\r\n            <Search />\r\n          </Route>\r\n          <Route path=\"/movies/:id\">\r\n            <MovieDetail />\r\n          </Route>\r\n          <Route path=\"/tv/:id\">\r\n            <TvDetail />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\nimport theme from \"./theme\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset}\r\n\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        \r\n        font-size:14px;\r\n        background-color:${theme.BgColor};\r\n        font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\r\n    }\r\n    \r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n        cursor: pointer;\r\n    }\r\n    ol, ul, li {\r\n        list-style: none;\r\n    }\r\n    img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    input, button {\r\n        background-color: transparent;\r\n    }\r\n    h1, h2, h3, h4, h5, h6 {\r\n    font-family:'Maven Pro', sans-serif;\r\n  }\r\n  .flex-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n   /*Loader*/\r\n \r\n  .spinner {\r\n    animation: rotator 1.4s linear infinite;\r\n  }\r\n  \r\n  @keyframes rotator {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(270deg);\r\n    }\r\n  }\r\n  .path {\r\n    stroke-dasharray: 187;\r\n    stroke-dashoffset: 0;\r\n    transform-origin: center;\r\n    animation: dash 1.4s ease-in-out infinite, colors 5.6s ease-in-out infinite;\r\n  }\r\n  \r\n  @keyframes colors {\r\n    0% {\r\n      stroke: #4285f4;\r\n    }\r\n    25% {\r\n      stroke: #de3e35;\r\n    }\r\n    50% {\r\n      stroke: #f7c223;\r\n    }\r\n    75% {\r\n      stroke: #1b9a59;\r\n    }\r\n    100% {\r\n      stroke: #4285f4;\r\n    }\r\n  }\r\n  @keyframes dash {\r\n    0% {\r\n      stroke-dashoffset: 187;\r\n    }\r\n    50% {\r\n      stroke-dashoffset: 46.75;\r\n      transform: rotate(135deg);\r\n    }\r\n    100% {\r\n      stroke-dashoffset: 187;\r\n      transform: rotate(450deg);\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n  \r\n}`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  .swiper-container {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: 100px) {\r\n    .grid-box {\r\n      grid-template-columns: repeat(1, minmax(100px, 1fr));\r\n    }\r\n    .grid-box-seaaon {\r\n      grid-template-columns: repeat(1, minmax(200px, 1fr));\r\n    }\r\n\r\n    .detail-layout-div {\r\n      flex-direction: column;\r\n    }\r\n    .detail-poster-div {\r\n      padding: 0 0 0 0;\r\n      width: 90%;\r\n    }\r\n    .detail-contents-div {\r\n      padding: 0 0 0 0;\r\n      width: 90%;\r\n      margin-bottom: 100px;\r\n    }\r\n    .home-maiv-tittle {\r\n      font-size: 50px;\r\n      font-weight: 800;\r\n    }\r\n    .home-main-over {\r\n      font-size: 20px;\r\n      font-weight: 400;\r\n      line-height: 30px;\r\n    }\r\n  }\r\n  .swiper-imagediv {\r\n    width: 480px;\r\n    height: 300px;\r\n  }\r\n\r\n  @media (min-width: 640px) {\r\n    .grid-box {\r\n      grid-template-columns: repeat(3, minmax(150px, 1fr));\r\n    }\r\n    .grid-box-seaaon {\r\n      grid-template-columns: repeat(3, minmax(200px, 1fr));\r\n    }\r\n\r\n    .swiper-imagediv {\r\n      width: 310px;\r\n    }\r\n    .detail-layout-div {\r\n      flex-direction: column;\r\n    }\r\n    .detail-poster-div {\r\n      padding: 0 0 0 0;\r\n      width: 80%;\r\n    }\r\n    .detail-contents-div {\r\n      padding: 0 0 0 0;\r\n      width: 80%;\r\n      margin-bottom: 100px;\r\n    }\r\n    .home-maiv-tittle {\r\n      font-size: 60px;\r\n      font-weight: 800;\r\n    }\r\n    .home-main-over {\r\n      font-size: 25px;\r\n      font-weight: 400;\r\n      line-height: 30px;\r\n    }\r\n  }\r\n  @media (min-width: 1000px) {\r\n    .grid-box {\r\n      grid-template-columns: repeat(5, minmax(200px, 1fr));\r\n    }\r\n    .grid-box-seaaon {\r\n      grid-template-columns: repeat(4, minmax(200px, 1fr));\r\n    }\r\n\r\n    .swiper-imagediv {\r\n      width: 350px;\r\n    }\r\n    .detail-layout-div {\r\n      flex-direction: row;\r\n    }\r\n    .detail-poster-div {\r\n      padding: 5vh 25px 10vh 0;\r\n      width: 40%;\r\n    }\r\n    .detail-contents-div {\r\n      padding: 5vh 0px 10vh 25px;\r\n      width: 40%;\r\n    }\r\n    .home-maiv-tittle {\r\n      font-size: 70px;\r\n      font-weight: 800;\r\n    }\r\n    .home-main-over {\r\n      font-size: 28px;\r\n      font-weight: 400;\r\n      line-height: 35px;\r\n    }\r\n  }\r\n\r\n  /* Landscape 모드일 때 적용할 CSS */\r\n  @media (min-height: 0px) {\r\n    .nav-div {\r\n      height: 15vh;\r\n    }\r\n    .nav-div-wrapper {\r\n      height: 15vh;\r\n    }\r\n    .home-wrapper-div {\r\n      margin-top: 17vh;\r\n    }\r\n  }\r\n  /* Portrait 모드일 때 적용할 CSS */\r\n  @media (min-height: 400px) {\r\n    .nav-div {\r\n      height: 6vh;\r\n    }\r\n    .nav-div-wrapper {\r\n      height: 6vh;\r\n    }\r\n    .home-wrapper-div {\r\n      margin-top: 8vh;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ResponsiveStyles = (props) => {\r\n  return <Wrapper>{props.children}</Wrapper>;\r\n};\r\n\r\nexport default ResponsiveStyles;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport GlobalStyles from \"./styles/GlobalStyles\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"./styles/theme\";\r\nimport \"swiper/swiper.scss\";\r\nimport { ApiProvider } from \"./Context/ApiContext\";\r\nimport ResponsiveStyles from \"./styles/ResponsiveStyles\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApiProvider>\r\n      <ThemeProvider theme={theme}>\r\n\r\n      <ResponsiveStyles>\r\n        <App />\r\n\r\n      </ResponsiveStyles>\r\n     \r\n      </ThemeProvider>\r\n      <GlobalStyles />\r\n    </ApiProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}