[{"C:\\Users\\user\\desktop\\ratflix\\src\\styles\\GlobalStyles.js":"1","C:\\Users\\user\\desktop\\ratflix\\src\\styles\\theme.js":"2","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Movie.js":"3","C:\\Users\\user\\desktop\\ratflix\\src\\components\\TvProgram.js":"4","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Search.js":"5","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Input.js":"6","C:\\Users\\user\\desktop\\ratflix\\src\\components\\fragment\\Movies.js":"7","C:\\Users\\user\\desktop\\ratflix\\src\\components\\fragment\\TvPrograms.js":"8","C:\\Users\\user\\desktop\\ratflix\\src\\index.js":"9","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Detail\\MovieDetail.js":"10","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Loader.js":"11","C:\\Users\\user\\desktop\\ratflix\\src\\components\\MainMovie.js":"12","C:\\Users\\user\\desktop\\ratflix\\src\\App.js":"13","C:\\Users\\user\\desktop\\ratflix\\src\\styles\\ResponsiveStyles.js":"14","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Home.js":"15","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Detail\\Season.js":"16"},{"size":1896,"mtime":1618493046722,"results":"17","hashOfConfig":"18"},{"size":326,"mtime":1618493046723,"results":"19","hashOfConfig":"18"},{"size":1345,"mtime":1618493046711,"results":"20","hashOfConfig":"18"},{"size":1462,"mtime":1618493046713,"results":"21","hashOfConfig":"18"},{"size":2187,"mtime":1618493046712,"results":"22","hashOfConfig":"18"},{"size":2084,"mtime":1618493046709,"results":"23","hashOfConfig":"18"},{"size":1975,"mtime":1618493046714,"results":"24","hashOfConfig":"18"},{"size":1971,"mtime":1618493046716,"results":"25","hashOfConfig":"18"},{"size":685,"mtime":1618493046721,"results":"26","hashOfConfig":"18"},{"size":5314,"mtime":1618493046707,"results":"27","hashOfConfig":"18"},{"size":439,"mtime":1618493046709,"results":"28","hashOfConfig":"18"},{"size":2255,"mtime":1618493046710,"results":"29","hashOfConfig":"18"},{"size":1209,"mtime":1618494474802,"results":"30","hashOfConfig":"18"},{"size":2859,"mtime":1618493046723,"results":"31","hashOfConfig":"18"},{"size":1241,"mtime":1618493046708,"results":"32","hashOfConfig":"18"},{"size":1511,"mtime":1618493046707,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1owpii7",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\desktop\\ratflix\\src\\styles\\GlobalStyles.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\styles\\theme.js",[],["71","72"],"C:\\Users\\user\\desktop\\ratflix\\src\\components\\Movie.js",[],["73","74"],"C:\\Users\\user\\desktop\\ratflix\\src\\components\\TvProgram.js",["75","76"],"import React, { useContext } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport { ApiContext } from \"../Context/ApiContext\";\r\nimport theme from \"../styles/theme\";\r\nimport TvPrograms from \"./fragment/TvPrograms\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 8vh 10px 10px 10px;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst TitleText = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 800;\r\n  margin-bottom: 3vh;\r\n  margin-top: 3vh;\r\n`;\r\n\r\nconst TvProgram = (props) => {\r\n  const apiContext = useContext(ApiContext);\r\n  const { onAirTv, popTv, topTv, isLoading } = apiContext;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>TV programs - Ratflix</title>\r\n      </Helmet>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <TitleText>{`${theme.nowContents}`}</TitleText>\r\n          <TvPrograms tvData={onAirTv} />\r\n\r\n          <TitleText>{`${theme.popContents}`}</TitleText>\r\n          <TvPrograms tvData={popTv} />\r\n\r\n          <TitleText>{`${theme.topContents}`}</TitleText>\r\n          <TvPrograms tvData={topTv} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TvProgram;\r\n","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Search.js",["77"],"import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport theme from \"../styles/theme\";\r\nimport Movies from \"./fragment/Movies\";\r\nimport TvPrograms from \"./fragment/TvPrograms\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 8vh 10px 10px 10px;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\nconst TitleText = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 800;\r\n  margin-bottom: 3vh;\r\n  margin-top: 3vh;\r\n`;\r\n\r\nconst Search = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [tvData, setTvData] = useState([]);\r\n  const match = useRouteMatch();\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const movieSearch = await apis.search.getSearchMovie(keyword);\r\n        const tvSearch = await apis.search.getSearchProgram(keyword);\r\n        const movieResults = movieSearch.data.results;\r\n        const tvResults = tvSearch.data.results;\r\n        setMovieData(movieResults);\r\n        setTvData(tvResults);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <>\r\n          <Helmet>\r\n            <title>Loading</title>\r\n          </Helmet>\r\n          <LoaderWrapper>\r\n            <Loader />\r\n          </LoaderWrapper>\r\n        </>\r\n      )}\r\n      <Helmet>\r\n        <title>{`${keyword}`} - Ratflix</title>\r\n      </Helmet>\r\n      {!isLoading && (\r\n        <>\r\n          <TitleText>{`${keyword} : 영화 검색 결과`}</TitleText>\r\n          <Movies movieData={movieData} />\r\n        </>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <TitleText>{`${keyword} : TV프로그램 검색 결과`}</TitleText>\r\n          <TvPrograms tvData={tvData} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Input.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\components\\fragment\\Movies.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\components\\fragment\\TvPrograms.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\index.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\components\\Detail\\MovieDetail.js",["78","79"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\nimport Loader from \"../Loader\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 7vh 10px 10px 10px;\r\n  height: 100%;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst BackgroundDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst BackgroundLayerDiv = styled.div.attrs({\r\n  className: \"detail-layout-div\",\r\n})`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PosterDiv = styled.div.attrs({\r\n  className: \"detail-poster-div\",\r\n})`\r\n  padding: 5vh 25px 10vh 0;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\nconst ContentsDiv = styled.div.attrs({\r\n  className: \"detail-contents-div\",\r\n})`\r\n  padding: 5vh 0px 10vh 25px;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Tittle = styled.h1`\r\n  font-size: 27px;\r\n  font-weight: 800;\r\n  line-height: 1.5em;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\nconst Genre = styled.h2`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  line-height: 2.5em;\r\n`;\r\n\r\nconst NavMenu = styled.ul`\r\n  display: flex;\r\n  font-weight: 600;\r\n  align-items: center;\r\n`;\r\nconst EachMenu = styled.li`\r\n  background-color: ${theme.ButtonColor};\r\n  padding: 7px 10px 7px 10px;\r\n  margin-right: 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst ContentDiv = styled.div``;\r\nconst VideoDiv = styled.div`\r\n  margin: 30px 0 0 0;\r\n`;\r\n\r\nconst MovieDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const match = useRouteMatch();\r\n  const { path, url } = match;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await apis.movies.getDetailMovie(id);\r\n        const videoData = await apis.movies.getVideoMovie(id);\r\n        const videoUrl = videoData.data.results[0].key;\r\n        const {\r\n          genres,\r\n          homepage,\r\n          poster_path,\r\n          overview,\r\n          tagline,\r\n          title,\r\n          vote_average,\r\n          runtime,\r\n          release_date,\r\n        } = response.data;\r\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\r\n        const youtubeUrl = `${apis.youTubeUrl}${videoUrl}`;\r\n        const year = new Date(release_date).getFullYear();\r\n        setDetailData({\r\n          genres,\r\n          homepage,\r\n          fullPosterUrl,\r\n          overview,\r\n          tagline,\r\n          title,\r\n          vote_average,\r\n          runtime,\r\n          year,\r\n          youtubeUrl,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <BackgroundDiv\r\n          style={{\r\n            background: `url(${detailData.fullPosterUrl})`,\r\n            backgroundPosition: \"center center\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <BackgroundLayerDiv>\r\n            <PosterDiv>\r\n              <img\r\n                src={`${detailData.fullPosterUrl}`}\r\n                style={{}}\r\n                alt={detailData.title}\r\n              />\r\n            </PosterDiv>\r\n            <ContentsDiv>\r\n              <Tittle>{detailData.title}</Tittle>\r\n              <Genre>{`${detailData.year} • ${detailData.runtime}min`}</Genre>\r\n              <Genre>\r\n                {detailData?.genres?.map((each) => {\r\n                  const name = each.name;\r\n                  return <span>{`${name} `}</span>;\r\n                })}\r\n              </Genre>\r\n              <NavMenu>\r\n                <EachMenu>\r\n                  <a target=\"_blank\" href={detailData.homepage}>\r\n                    홈페이지\r\n                  </a>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={url}>\r\n                    설명\r\n                  </NavLink>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={`${url}/video`}>\r\n                    예고\r\n                  </NavLink>\r\n                </EachMenu>\r\n              </NavMenu>\r\n\r\n              <ContentDiv>\r\n                <Switch>\r\n                  <Route exact path={`${path}`}>\r\n                    <Tittle>{detailData.tagline}</Tittle>\r\n                    <Genre>{detailData.overview}</Genre>\r\n                  </Route>\r\n                  <Route exact path={`${path}/video`}>\r\n                    <VideoDiv>\r\n                      <ReactPlayer width=\"100%\" url={detailData.youtubeUrl} />\r\n                    </VideoDiv>\r\n                  </Route>\r\n                </Switch>\r\n              </ContentDiv>\r\n            </ContentsDiv>\r\n          </BackgroundLayerDiv>\r\n        </BackgroundDiv>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","C:\\Users\\user\\desktop\\ratflix\\src\\components\\Loader.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\components\\MainMovie.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\App.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\styles\\ResponsiveStyles.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\components\\Home.js",[],"C:\\Users\\user\\desktop\\ratflix\\src\\components\\Detail\\Season.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":12},{"ruleId":"92","severity":1,"message":"93","line":50,"column":6,"nodeType":"94","endLine":50,"endColumn":8,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":128,"column":6,"nodeType":"94","endLine":128,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":164,"column":22,"nodeType":"100","endLine":164,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":38,"column":28,"nodeType":"103","messageId":"104","endLine":38,"endColumn":30},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'apis' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["108"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [keyword]",{"range":"113","text":"114"},"Update the dependencies array to be: [id]",{"range":"115","text":"116"},[1448,1450],"[keyword]",[3060,3062],"[id]"]