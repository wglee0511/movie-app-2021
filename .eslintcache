[{"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\Context\\ApiContext.js":"1","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\ResponsiveStyles.js":"2","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Search.js":"3","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Movie.js":"4","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\MovieDetail.js":"5","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Slider.js":"6","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\index.js":"7","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\theme.js":"8","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Home.js":"9","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\apis\\api.js":"10","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\MainMovie.js":"11","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\GlobalStyles.js":"12","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Input.js":"13","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\TvProgram.js":"14","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\TvDetail.js":"15","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Loader.js":"16","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\Season.js":"17"},{"size":2161,"mtime":1617929875747,"results":"18","hashOfConfig":"19"},{"size":1831,"mtime":1618321207312,"results":"20","hashOfConfig":"19"},{"size":911,"mtime":1617713911608,"results":"21","hashOfConfig":"19"},{"size":3937,"mtime":1618142664977,"results":"22","hashOfConfig":"19"},{"size":5210,"mtime":1618239134025,"results":"23","hashOfConfig":"19"},{"size":4292,"mtime":1618142664983,"results":"24","hashOfConfig":"19"},{"size":685,"mtime":1618142664986,"results":"25","hashOfConfig":"19"},{"size":326,"mtime":1618142664992,"results":"26","hashOfConfig":"19"},{"size":1172,"mtime":1618142664972,"results":"27","hashOfConfig":"19"},{"size":1579,"mtime":1618239913901,"results":"28","hashOfConfig":"19"},{"size":2283,"mtime":1618225130669,"results":"29","hashOfConfig":"19"},{"size":1896,"mtime":1618142664990,"results":"30","hashOfConfig":"19"},{"size":1652,"mtime":1617716681489,"results":"31","hashOfConfig":"19"},{"size":3947,"mtime":1618142664985,"results":"32","hashOfConfig":"19"},{"size":4787,"mtime":1618321164401,"results":"33","hashOfConfig":"19"},{"size":439,"mtime":1617624019018,"results":"34","hashOfConfig":"19"},{"size":1511,"mtime":1618320847622,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1enx1so",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\Context\\ApiContext.js",[],["76","77"],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\ResponsiveStyles.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Search.js",["78","79","80"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})``;\r\n\r\nconst Search = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [movieSearch, setMovieSearch] = useState({});\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const movieSearch = await apis.search.getSearchMovie(\"아이언맨\");\r\n\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && <div>Search</div>}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Movie.js",[],["81","82"],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\MovieDetail.js",["83","84","85"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\nimport Loader from \"../Loader\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 7vh 10px 10px 10px;\r\n  height: 100%;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst BackgroundDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst BackgroundLayerDiv = styled.div.attrs({\r\n  className: \"detail-layout-div\",\r\n})`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PosterDiv = styled.div.attrs({\r\n  className: \"detail-poster-div\",\r\n})`\r\n  padding: 5vh 25px 10vh 0;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\nconst ContentsDiv = styled.div.attrs({\r\n  className: \"detail-contents-div\",\r\n})`\r\n  padding: 5vh 0px 10vh 25px;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Tittle = styled.h1`\r\n  font-size: 27px;\r\n  font-weight: 800;\r\n  line-height: 1.5em;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\nconst Genre = styled.h2`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  line-height: 2.5em;\r\n`;\r\n\r\nconst NavMenu = styled.ul`\r\n  display: flex;\r\n  font-weight: 600;\r\n  align-items: center;\r\n`;\r\nconst EachMenu = styled.li`\r\n  background-color: ${theme.ButtonColor};\r\n  padding: 7px 10px 7px 10px;\r\n  margin-right: 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst ContentDiv = styled.div``;\r\nconst VideoDiv = styled.div`\r\n  margin: 30px 0 0 0;\r\n`;\r\n\r\nconst MovieDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const match = useRouteMatch();\r\n  const { path, url } = match;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await apis.movies.getDetailMovie(id);\r\n        const videoData = await apis.movies.getVideoMovie(id);\r\n        const videoUrl = videoData.data.results[0].key;\r\n        const {\r\n          genres,\r\n          homepage,\r\n          poster_path,\r\n          overview,\r\n          tagline,\r\n          title,\r\n          vote_average,\r\n          runtime,\r\n          release_date,\r\n        } = response.data;\r\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\r\n        const youtubeUrl = `${apis.youTubeUrl}${videoUrl}`;\r\n        const year = new Date(release_date).getFullYear();\r\n        setDetailData({\r\n          genres,\r\n          homepage,\r\n          fullPosterUrl,\r\n          overview,\r\n          tagline,\r\n          title,\r\n          vote_average,\r\n          runtime,\r\n          year,\r\n          youtubeUrl,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <BackgroundDiv\r\n          style={{\r\n            background: `url(${detailData.fullPosterUrl})`,\r\n            backgroundPosition: \"center center\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <BackgroundLayerDiv>\r\n            <PosterDiv>\r\n              <img src={`${detailData.fullPosterUrl}`} style={{}} />\r\n            </PosterDiv>\r\n            <ContentsDiv>\r\n              <Tittle>{detailData.title}</Tittle>\r\n              <Genre>{`${detailData.year} • ${detailData.runtime}min`}</Genre>\r\n              <Genre>\r\n                {detailData?.genres?.map((each) => {\r\n                  const name = each.name;\r\n                  return `${name} `;\r\n                })}\r\n              </Genre>\r\n              <NavMenu>\r\n                <EachMenu>\r\n                  <a target=\"_blank\" href={detailData.homepage}>\r\n                    홈페이지\r\n                  </a>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={url}>\r\n                    설명\r\n                  </NavLink>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={`${url}/video`}>\r\n                    예고\r\n                  </NavLink>\r\n                </EachMenu>\r\n              </NavMenu>\r\n\r\n              <ContentDiv>\r\n                <Switch>\r\n                  <Route exact path={`${path}`}>\r\n                    <Tittle>{detailData.tagline}</Tittle>\r\n                    <Genre>{detailData.overview}</Genre>\r\n                  </Route>\r\n                  <Route exact path={`${path}/video`}>\r\n                    <VideoDiv>\r\n                      <ReactPlayer width=\"100%\" url={detailData.youtubeUrl} />\r\n                    </VideoDiv>\r\n                  </Route>\r\n                </Switch>\r\n              </ContentDiv>\r\n            </ContentsDiv>\r\n          </BackgroundLayerDiv>\r\n        </BackgroundDiv>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Slider.js",["86","87"],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\index.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\theme.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Home.js",["88","89","90"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport { ApiContext } from \"../Context/ApiContext\";\r\nimport theme from \"../styles/theme\";\r\nimport Loader from \"./Loader\";\r\nimport MainMovie from \"./MainMovie\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 10px 10px 10px 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst MainFrameDiv = styled.div``;\r\n\r\nconst SliderDiv = styled.div`\r\n  color: ${theme.FontColor};\r\n  margin: 3vh 0 3vh 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst Home = () => {\r\n  const apiContext = useContext(ApiContext);\r\n  const isLoading = apiContext.isLoading;\r\n\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <MainFrameDiv>\r\n            <MainMovie />\r\n          </MainFrameDiv>\r\n          <SliderDiv>\r\n            <Slider />\r\n          </SliderDiv>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\apis\\api.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\MainMovie.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\GlobalStyles.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Input.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\TvProgram.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\TvDetail.js",["91","92"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\nimport Loader from \"../Loader\";\r\nimport Season from \"./Season\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 7vh 10px 10px 10px;\r\n  height: 100%;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst BackgroundDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst BackgroundLayerDiv = styled.div.attrs({\r\n  className: \"detail-layout-div\",\r\n})`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PosterDiv = styled.div.attrs({\r\n  className: \"detail-poster-div\",\r\n})`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst ContentsDiv = styled.div.attrs({\r\n  className: \"detail-contents-div\",\r\n})`\r\n  padding: 5vh 0px 10vh 25px;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Tittle = styled.h1`\r\n  font-size: 27px;\r\n  font-weight: 800;\r\n  line-height: 1.5em;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\nconst Genre = styled.h2`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  line-height: 2.5em;\r\n`;\r\n\r\nconst NavMenu = styled.ul`\r\n  display: flex;\r\n  font-weight: 600;\r\n  align-items: center;\r\n`;\r\nconst EachMenu = styled.li`\r\n  background-color: ${theme.ButtonColor};\r\n  padding: 7px 10px 7px 10px;\r\n  margin-right: 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TvDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const match = useRouteMatch();\r\n  const { path, url } = match;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await apis.tvprograms.getDetailPrograms(id);\r\n        const {\r\n          episode_run_time,\r\n          genres,\r\n          homepage,\r\n          poster_path,\r\n          seasons,\r\n          overview,\r\n          name,\r\n          last_air_date,\r\n        } = response.data;\r\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\r\n        const year = new Date(last_air_date).getFullYear();\r\n        setDetailData({\r\n          genres,\r\n          homepage,\r\n          fullPosterUrl,\r\n          overview,\r\n          name,\r\n          seasons,\r\n          episode_run_time,\r\n          year,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <BackgroundDiv\r\n          style={{\r\n            background: `url(${detailData.fullPosterUrl})`,\r\n            backgroundPosition: \"center center\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <BackgroundLayerDiv>\r\n            <PosterDiv>\r\n              <img src={`${detailData.fullPosterUrl}`} alt={detailData.name} />\r\n            </PosterDiv>\r\n            <ContentsDiv>\r\n              <Tittle>{detailData.name}</Tittle>\r\n              <Genre>{`${detailData.year} • ${detailData.episode_run_time}min`}</Genre>\r\n              <Genre>\r\n                {detailData?.genres?.map((each) => {\r\n                  const name = each.name;\r\n                  return `${name} `;\r\n                })}\r\n              </Genre>\r\n              <NavMenu>\r\n                <EachMenu>\r\n                  <a target=\"_blank\" href={detailData.homepage}>\r\n                    홈페이지\r\n                  </a>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={url}>\r\n                    설명\r\n                  </NavLink>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={`${url}/seasons`}>\r\n                    시즌\r\n                  </NavLink>\r\n                </EachMenu>\r\n              </NavMenu>\r\n\r\n              <ContentDiv>\r\n                <Switch>\r\n                  <Route exact path={`${path}`}>\r\n                    <Genre>{detailData.overview}</Genre>\r\n                  </Route>\r\n                  <Route exact path={`${path}/seasons`}>\r\n                    <Season seasons={detailData.seasons} />\r\n                  </Route>\r\n                </Switch>\r\n              </ContentDiv>\r\n            </ContentsDiv>\r\n          </BackgroundLayerDiv>\r\n        </BackgroundDiv>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TvDetail;\r\n","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Loader.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\Season.js",["93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":14,"column":10,"nodeType":"100","messageId":"101","endLine":14,"endColumn":21},{"ruleId":"98","severity":1,"message":"102","line":14,"column":23,"nodeType":"100","messageId":"101","endLine":14,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":20,"column":15,"nodeType":"100","messageId":"101","endLine":20,"endColumn":26},{"ruleId":"94","replacedBy":"103"},{"ruleId":"96","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":128,"column":6,"nodeType":"107","endLine":128,"endColumn":8,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":147,"column":15,"nodeType":"111","endLine":147,"endColumn":69},{"ruleId":"112","severity":1,"message":"113","line":160,"column":22,"nodeType":"114","endLine":160,"endColumn":37},{"ruleId":"98","severity":1,"message":"115","line":96,"column":41,"nodeType":"100","messageId":"101","endLine":96,"endColumn":53},{"ruleId":"98","severity":1,"message":"115","line":143,"column":41,"nodeType":"100","messageId":"101","endLine":143,"endColumn":53},{"ruleId":"98","severity":1,"message":"116","line":1,"column":29,"nodeType":"100","messageId":"101","endLine":1,"endColumn":38},{"ruleId":"98","severity":1,"message":"117","line":1,"column":40,"nodeType":"100","messageId":"101","endLine":1,"endColumn":48},{"ruleId":"98","severity":1,"message":"118","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":121,"column":6,"nodeType":"107","endLine":121,"endColumn":8,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"113","line":153,"column":22,"nodeType":"114","endLine":153,"endColumn":37},{"ruleId":"120","severity":1,"message":"121","line":38,"column":28,"nodeType":"122","messageId":"123","endLine":38,"endColumn":30},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'movieSearch' is assigned a value but never used.","Identifier","unusedVar","'setMovieSearch' is assigned a value but never used.",["124"],["125"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["126"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'release_date' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'apis' is defined but never used.",["127"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},"Update the dependencies array to be: [id]",{"range":"131","text":"132"},{"range":"133","text":"132"},[3060,3062],"[id]",[2760,2762]]