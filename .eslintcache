[{"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\Context\\ApiContext.js":"1","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\ResponsiveStyles.js":"2","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Search.js":"3","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Movie.js":"4","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\MovieDetail.js":"5","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Slider.js":"6","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\index.js":"7","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\theme.js":"8","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Home.js":"9","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\apis\\api.js":"10","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\MainMovie.js":"11","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\GlobalStyles.js":"12","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Input.js":"13","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\TvProgram.js":"14","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\TvDetail.js":"15","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Loader.js":"16","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\Season.js":"17","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\App.js":"18","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\fragment\\Movies.js":"19","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\fragment\\TvPrograms.js":"20"},{"size":2161,"mtime":1617929875747,"results":"21","hashOfConfig":"22"},{"size":1831,"mtime":1618321207312,"results":"23","hashOfConfig":"22"},{"size":1814,"mtime":1618328256344,"results":"24","hashOfConfig":"22"},{"size":4475,"mtime":1618327163933,"results":"25","hashOfConfig":"22"},{"size":5210,"mtime":1618239134025,"results":"26","hashOfConfig":"22"},{"size":4292,"mtime":1618142664983,"results":"27","hashOfConfig":"22"},{"size":685,"mtime":1618142664986,"results":"28","hashOfConfig":"22"},{"size":326,"mtime":1618142664992,"results":"29","hashOfConfig":"22"},{"size":1172,"mtime":1618142664972,"results":"30","hashOfConfig":"22"},{"size":1579,"mtime":1618239913901,"results":"31","hashOfConfig":"22"},{"size":2283,"mtime":1618225130669,"results":"32","hashOfConfig":"22"},{"size":1896,"mtime":1618142664990,"results":"33","hashOfConfig":"22"},{"size":2084,"mtime":1618324113358,"results":"34","hashOfConfig":"22"},{"size":3947,"mtime":1618142664985,"results":"35","hashOfConfig":"22"},{"size":4787,"mtime":1618321164401,"results":"36","hashOfConfig":"22"},{"size":439,"mtime":1617624019018,"results":"37","hashOfConfig":"22"},{"size":1511,"mtime":1618320847622,"results":"38","hashOfConfig":"22"},{"size":1212,"mtime":1618322182807,"results":"39","hashOfConfig":"22"},{"size":2095,"mtime":1618327904773,"results":"40","hashOfConfig":"22"},{"size":1158,"mtime":1618328217718,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1enx1so",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\Context\\ApiContext.js",[],["89","90"],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\ResponsiveStyles.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Search.js",["91","92","93","94","95"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport theme from \"../styles/theme\";\r\nimport Movies from \"./fragment/Movies\";\r\nimport TvPrograms from \"./fragment/TvPrograms\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 8vh 10px 10px 10px;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\nconst TitleText = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 800;\r\n  margin-bottom: 3vh;\r\n  margin-top: 3vh;\r\n`;\r\n\r\nconst Search = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [tvData, setTvData] = useState([]);\r\n  const match = useRouteMatch();\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const movieSearch = await apis.search.getSearchMovie(keyword);\r\n        const tvSearch = await apis.search.getSearchProgram(keyword);\r\n        const movieResults = movieSearch.data.results;\r\n        const tvResults = movieSearch.data.results;\r\n        setMovieData(movieResults);\r\n        setTvData(tvResults);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <TitleText>{`${keyword} : 검색 결과`}</TitleText>\r\n          <Movies movieData={movieData} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Movie.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\MovieDetail.js",["96","97","98"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\nimport Loader from \"../Loader\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 7vh 10px 10px 10px;\r\n  height: 100%;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst BackgroundDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst BackgroundLayerDiv = styled.div.attrs({\r\n  className: \"detail-layout-div\",\r\n})`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PosterDiv = styled.div.attrs({\r\n  className: \"detail-poster-div\",\r\n})`\r\n  padding: 5vh 25px 10vh 0;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\nconst ContentsDiv = styled.div.attrs({\r\n  className: \"detail-contents-div\",\r\n})`\r\n  padding: 5vh 0px 10vh 25px;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Tittle = styled.h1`\r\n  font-size: 27px;\r\n  font-weight: 800;\r\n  line-height: 1.5em;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\nconst Genre = styled.h2`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  line-height: 2.5em;\r\n`;\r\n\r\nconst NavMenu = styled.ul`\r\n  display: flex;\r\n  font-weight: 600;\r\n  align-items: center;\r\n`;\r\nconst EachMenu = styled.li`\r\n  background-color: ${theme.ButtonColor};\r\n  padding: 7px 10px 7px 10px;\r\n  margin-right: 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst ContentDiv = styled.div``;\r\nconst VideoDiv = styled.div`\r\n  margin: 30px 0 0 0;\r\n`;\r\n\r\nconst MovieDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const match = useRouteMatch();\r\n  const { path, url } = match;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await apis.movies.getDetailMovie(id);\r\n        const videoData = await apis.movies.getVideoMovie(id);\r\n        const videoUrl = videoData.data.results[0].key;\r\n        const {\r\n          genres,\r\n          homepage,\r\n          poster_path,\r\n          overview,\r\n          tagline,\r\n          title,\r\n          vote_average,\r\n          runtime,\r\n          release_date,\r\n        } = response.data;\r\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\r\n        const youtubeUrl = `${apis.youTubeUrl}${videoUrl}`;\r\n        const year = new Date(release_date).getFullYear();\r\n        setDetailData({\r\n          genres,\r\n          homepage,\r\n          fullPosterUrl,\r\n          overview,\r\n          tagline,\r\n          title,\r\n          vote_average,\r\n          runtime,\r\n          year,\r\n          youtubeUrl,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <BackgroundDiv\r\n          style={{\r\n            background: `url(${detailData.fullPosterUrl})`,\r\n            backgroundPosition: \"center center\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <BackgroundLayerDiv>\r\n            <PosterDiv>\r\n              <img src={`${detailData.fullPosterUrl}`} style={{}} />\r\n            </PosterDiv>\r\n            <ContentsDiv>\r\n              <Tittle>{detailData.title}</Tittle>\r\n              <Genre>{`${detailData.year} • ${detailData.runtime}min`}</Genre>\r\n              <Genre>\r\n                {detailData?.genres?.map((each) => {\r\n                  const name = each.name;\r\n                  return `${name} `;\r\n                })}\r\n              </Genre>\r\n              <NavMenu>\r\n                <EachMenu>\r\n                  <a target=\"_blank\" href={detailData.homepage}>\r\n                    홈페이지\r\n                  </a>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={url}>\r\n                    설명\r\n                  </NavLink>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={`${url}/video`}>\r\n                    예고\r\n                  </NavLink>\r\n                </EachMenu>\r\n              </NavMenu>\r\n\r\n              <ContentDiv>\r\n                <Switch>\r\n                  <Route exact path={`${path}`}>\r\n                    <Tittle>{detailData.tagline}</Tittle>\r\n                    <Genre>{detailData.overview}</Genre>\r\n                  </Route>\r\n                  <Route exact path={`${path}/video`}>\r\n                    <VideoDiv>\r\n                      <ReactPlayer width=\"100%\" url={detailData.youtubeUrl} />\r\n                    </VideoDiv>\r\n                  </Route>\r\n                </Switch>\r\n              </ContentDiv>\r\n            </ContentsDiv>\r\n          </BackgroundLayerDiv>\r\n        </BackgroundDiv>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Slider.js",["99","100"],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\index.js",[],["101","102"],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\theme.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Home.js",["103","104","105"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport { ApiContext } from \"../Context/ApiContext\";\r\nimport theme from \"../styles/theme\";\r\nimport Loader from \"./Loader\";\r\nimport MainMovie from \"./MainMovie\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 10px 10px 10px 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst MainFrameDiv = styled.div``;\r\n\r\nconst SliderDiv = styled.div`\r\n  color: ${theme.FontColor};\r\n  margin: 3vh 0 3vh 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst Home = () => {\r\n  const apiContext = useContext(ApiContext);\r\n  const isLoading = apiContext.isLoading;\r\n\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <MainFrameDiv>\r\n            <MainMovie />\r\n          </MainFrameDiv>\r\n          <SliderDiv>\r\n            <Slider />\r\n          </SliderDiv>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\apis\\api.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\MainMovie.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\styles\\GlobalStyles.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Input.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\TvProgram.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\TvDetail.js",["106","107"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\nimport Loader from \"../Loader\";\r\nimport Season from \"./Season\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 7vh 10px 10px 10px;\r\n  height: 100%;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst BackgroundDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst BackgroundLayerDiv = styled.div.attrs({\r\n  className: \"detail-layout-div\",\r\n})`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PosterDiv = styled.div.attrs({\r\n  className: \"detail-poster-div\",\r\n})`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst ContentsDiv = styled.div.attrs({\r\n  className: \"detail-contents-div\",\r\n})`\r\n  padding: 5vh 0px 10vh 25px;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Tittle = styled.h1`\r\n  font-size: 27px;\r\n  font-weight: 800;\r\n  line-height: 1.5em;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\nconst Genre = styled.h2`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  line-height: 2.5em;\r\n`;\r\n\r\nconst NavMenu = styled.ul`\r\n  display: flex;\r\n  font-weight: 600;\r\n  align-items: center;\r\n`;\r\nconst EachMenu = styled.li`\r\n  background-color: ${theme.ButtonColor};\r\n  padding: 7px 10px 7px 10px;\r\n  margin-right: 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TvDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const match = useRouteMatch();\r\n  const { path, url } = match;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await apis.tvprograms.getDetailPrograms(id);\r\n        const {\r\n          episode_run_time,\r\n          genres,\r\n          homepage,\r\n          poster_path,\r\n          seasons,\r\n          overview,\r\n          name,\r\n          last_air_date,\r\n        } = response.data;\r\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\r\n        const year = new Date(last_air_date).getFullYear();\r\n        setDetailData({\r\n          genres,\r\n          homepage,\r\n          fullPosterUrl,\r\n          overview,\r\n          name,\r\n          seasons,\r\n          episode_run_time,\r\n          year,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <BackgroundDiv\r\n          style={{\r\n            background: `url(${detailData.fullPosterUrl})`,\r\n            backgroundPosition: \"center center\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <BackgroundLayerDiv>\r\n            <PosterDiv>\r\n              <img src={`${detailData.fullPosterUrl}`} alt={detailData.name} />\r\n            </PosterDiv>\r\n            <ContentsDiv>\r\n              <Tittle>{detailData.name}</Tittle>\r\n              <Genre>{`${detailData.year} • ${detailData.episode_run_time}min`}</Genre>\r\n              <Genre>\r\n                {detailData?.genres?.map((each) => {\r\n                  const name = each.name;\r\n                  return `${name} `;\r\n                })}\r\n              </Genre>\r\n              <NavMenu>\r\n                <EachMenu>\r\n                  <a target=\"_blank\" href={detailData.homepage}>\r\n                    홈페이지\r\n                  </a>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={url}>\r\n                    설명\r\n                  </NavLink>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={`${url}/seasons`}>\r\n                    시즌\r\n                  </NavLink>\r\n                </EachMenu>\r\n              </NavMenu>\r\n\r\n              <ContentDiv>\r\n                <Switch>\r\n                  <Route exact path={`${path}`}>\r\n                    <Genre>{detailData.overview}</Genre>\r\n                  </Route>\r\n                  <Route exact path={`${path}/seasons`}>\r\n                    <Season seasons={detailData.seasons} />\r\n                  </Route>\r\n                </Switch>\r\n              </ContentDiv>\r\n            </ContentsDiv>\r\n          </BackgroundLayerDiv>\r\n        </BackgroundDiv>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TvDetail;\r\n","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Loader.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\Detail\\Season.js",["108"],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\App.js",[],"C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\fragment\\Movies.js",["109"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\n\r\nconst MoviesDiv = styled.div.attrs({\r\n  className: \"grid-box\",\r\n})`\r\n  display: grid;\r\n  grid-gap: 15px;\r\n`;\r\n\r\nconst MovieDiv = styled.div`\r\n  width: 100%;\r\n  :hover {\r\n    .score-text {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)``;\r\n\r\nconst ImageDiv = styled.div`\r\n  height: 20vh;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst TitleText = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 800;\r\n  margin-bottom: 3vh;\r\n  margin-top: 3vh;\r\n`;\r\n\r\nconst TittleDiv = styled.div`\r\n  color: ${theme.FontColor};\r\n  margin: 1vh 0 1vh 0;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst ScoreDiv = styled.div.attrs({\r\n  className: \"score-text\",\r\n})`\r\n  color: ${theme.EtcColor};\r\n  font-size: 15px;\r\n  font-weight: 800;\r\n  margin: 0 5px 5px 0;\r\n  display: none;\r\n`;\r\n\r\nconst Movies = (props) => {\r\n  const { movieData } = props;\r\n\r\n  if (movieData.length !== 0) {\r\n    return (\r\n      <MoviesDiv>\r\n        {movieData?.map((each) => {\r\n          const { id, vote_average, title, poster_path } = each;\r\n          const posterUrl = `${apis.baseUrl + poster_path}`;\r\n          return (\r\n            <MovieDiv>\r\n              <StyledLink key={id} to={`/movies/${id}`}>\r\n                <ImageDiv\r\n                  style={{\r\n                    background: `url(${posterUrl})`,\r\n                    backgroundPosition: \"center center\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <ScoreDiv>{`${vote_average} / 10.0`}</ScoreDiv>\r\n                </ImageDiv>\r\n              </StyledLink>\r\n              <TittleDiv>{title}</TittleDiv>{\" \"}\r\n            </MovieDiv>\r\n          );\r\n        })}\r\n      </MoviesDiv>\r\n    );\r\n  } else if (movieData.length === 0) {\r\n    return <TittleDiv>검색결과가 없습니다.</TittleDiv>;\r\n  }\r\n};\r\n\r\nexport default Movies;\r\n","C:\\Users\\user\\Desktop\\movie-app-2021\\src\\components\\fragment\\TvPrograms.js",["110","111","112","113","114","115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":18},{"ruleId":"121","severity":1,"message":"126","line":31,"column":10,"nodeType":"123","messageId":"124","endLine":31,"endColumn":16},{"ruleId":"121","severity":1,"message":"127","line":40,"column":15,"nodeType":"123","messageId":"124","endLine":40,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":50,"column":6,"nodeType":"130","endLine":50,"endColumn":8,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":128,"column":6,"nodeType":"130","endLine":128,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":147,"column":15,"nodeType":"136","endLine":147,"endColumn":69},{"ruleId":"137","severity":1,"message":"138","line":160,"column":22,"nodeType":"139","endLine":160,"endColumn":37},{"ruleId":"121","severity":1,"message":"140","line":96,"column":41,"nodeType":"123","messageId":"124","endLine":96,"endColumn":53},{"ruleId":"121","severity":1,"message":"140","line":143,"column":41,"nodeType":"123","messageId":"124","endLine":143,"endColumn":53},{"ruleId":"117","replacedBy":"141"},{"ruleId":"119","replacedBy":"142"},{"ruleId":"121","severity":1,"message":"143","line":1,"column":29,"nodeType":"123","messageId":"124","endLine":1,"endColumn":38},{"ruleId":"121","severity":1,"message":"144","line":1,"column":40,"nodeType":"123","messageId":"124","endLine":1,"endColumn":48},{"ruleId":"121","severity":1,"message":"145","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":121,"column":6,"nodeType":"130","endLine":121,"endColumn":8,"suggestions":"146"},{"ruleId":"137","severity":1,"message":"138","line":153,"column":22,"nodeType":"139","endLine":153,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":38,"column":28,"nodeType":"149","messageId":"150","endLine":38,"endColumn":30},{"ruleId":"121","severity":1,"message":"151","line":33,"column":7,"nodeType":"123","messageId":"124","endLine":33,"endColumn":16},{"ruleId":"121","severity":1,"message":"152","line":6,"column":7,"nodeType":"123","messageId":"124","endLine":6,"endColumn":13},{"ruleId":"121","severity":1,"message":"153","line":13,"column":7,"nodeType":"123","messageId":"124","endLine":13,"endColumn":15},{"ruleId":"121","severity":1,"message":"154","line":22,"column":7,"nodeType":"123","messageId":"124","endLine":22,"endColumn":17},{"ruleId":"121","severity":1,"message":"155","line":24,"column":7,"nodeType":"123","messageId":"124","endLine":24,"endColumn":15},{"ruleId":"121","severity":1,"message":"151","line":32,"column":7,"nodeType":"123","messageId":"124","endLine":32,"endColumn":16},{"ruleId":"121","severity":1,"message":"156","line":39,"column":7,"nodeType":"123","messageId":"124","endLine":39,"endColumn":16},{"ruleId":"121","severity":1,"message":"157","line":46,"column":7,"nodeType":"123","messageId":"124","endLine":46,"endColumn":15},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'TvPrograms' is defined but never used.","'tvData' is assigned a value but never used.","'tvSearch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["161"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'release_date' is assigned a value but never used.",["158"],["159"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'apis' is defined but never used.",["162"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'TitleText' is assigned a value but never used.","'Movies' is assigned a value but never used.","'MovieDiv' is assigned a value but never used.","'StyledLink' is assigned a value but never used.","'ImageDiv' is assigned a value but never used.","'TittleDiv' is assigned a value but never used.","'ScoreDiv' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},"Update the dependencies array to be: [keyword]",{"range":"168","text":"169"},"Update the dependencies array to be: [id]",{"range":"170","text":"171"},{"range":"172","text":"171"},[1453,1455],"[keyword]",[3060,3062],"[id]",[2760,2762]]