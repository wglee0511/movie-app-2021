{"version":3,"sources":["styles/theme.js","components/Input.js","components/Navbar.js","apis/api.js","Context/ApiContext.js","components/Loader.js","components/fragment/Movies.js","components/Movie.js","components/fragment/TvPrograms.js","components/TvProgram.js","components/Search.js","components/MainMovie.js","components/Slider.js","components/Home.js","components/Detail/MovieDetail.js","components/Detail/Season.js","components/Detail/TvDetail.js","App.js","styles/GlobalStyles.js","styles/ResponsiveStyles.js","index.js"],"names":["theme","BannerColor","NavBgColor","ButtonColor","BgColor","EtcColor","FontColor","nowContents","popContents","topContents","Wrapper","styled","div","attrs","className","StyledForm","form","StyledInput","input","Input","useState","keyword","setKeyword","onSubmit","event","preventDefault","document","location","href","aria-hidden","focusable","data-prefix","data-icon","class","role","xmlns","viewBox","fill","d","onChange","innnerWord","target","value","type","placeholder","NavDiv","header","BannerNavWrapper","BannerText","Link","NavWrapper","EachLink","props","current","BannerNav","EachNav","withRouter","pathname","to","api","axios","create","baseURL","params","api_key","language","seachForApi","query","apis","movies","getNowPlayMovies","get","getPopMovies","getTopRatedMovies","getDetailMovie","movie_id","getVideoMovie","tvprograms","getOnTheAirPrograms","getPopPrograms","getTopRatedPrograms","getDetailPrograms","tv_id","search","getSearchMovie","getSearchProgram","baseUrl","youTubeUrl","ApiContext","createContext","ApiProvider","isLoading","setIsLoading","firstMovie","setFirstMovie","now","setNow","pop","setPop","top","setTop","onAirTv","setOnAirTv","popTv","setPopTv","topTv","setTopTv","useEffect","a","apiNowData","nowData","data","results","apiPopData","popData","apiTopData","topData","apiOnAir","onAirData","apiPopTv","popTvData","apiTopTv","topTvData","id","overview","poster_path","title","vote_average","console","log","Provider","children","Loader","width","height","strokeWidth","strokeLinecap","cx","cy","r","MoviesDiv","MovieDiv","StyledLink","ImageDiv","TittleDiv","ScoreDiv","Movies","movieData","length","map","each","posterUrl","style","background","backgroundPosition","backgroundSize","LoaderWrapper","TitleText","h1","Movie","apiContext","useContext","Helmet","TvPrograms","tvData","name","TvProgram","Search","setMovieData","setTvData","useRouteMatch","movieSearch","tvSearch","movieResults","tvResults","BackgroundLayer","TextDiv","Title","OverView","h3","TextMiddleDiv","TextBottonDiv","TextAverage","MainMovie","MovieWrapper","TvWrapper","Tittle","RatingScore","Slider","popMovie","spaceBetween","breakpoints","480","slidesPerView","640","1060","onSlideChange","onSwiper","swiper","MainFrameDiv","SliderDiv","Home","BackgroundDiv","BackgroundLayerDiv","PosterDiv","ContentsDiv","Genre","h2","NavMenu","ul","EachMenu","li","ContentDiv","VideoDiv","MovieDetail","detailData","setDetailData","useParams","match","path","url","response","videoData","videoUrl","key","genres","homepage","tagline","runtime","release_date","fullPosterUrl","youtubeUrl","year","Date","getFullYear","src","alt","exact","GridContent","GridImageDiv","NameHead","YearHead","Season","seasons","air_date","episode_count","fullPosterSeason","TvDetail","episode_run_time","last_air_date","rel","App","Navbar","GlobalStyles","createGlobalStyle","reset","ResponsiveStyles","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d161d594.chunk.js","sourcesContent":["const theme = {\n  BannerColor: \"red\",\n  NavBgColor: \"black\",\n  ButtonColor: \"#393e46\",\n  BgColor: \"black\",\n  EtcColor: \"#ffd369\",\n  FontColor: \"#eeeeee\",\n  nowContents: \"새로운 컨텐츠\",\n  popContents: \"지금 인기있는 컨텐츠\",\n  topContents: \"사랑받고 있는 컨텐츠\"\n};\n\nexport default theme;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"../styles/theme\";\n\nconst Wrapper = styled.div.attrs({\n  className: \"flex-box\",\n})`\n  height: 100%;\n  margin-right: 10px;\n`;\nconst StyledForm = styled.form`\n  height: 100%;\n  display: flex;\n  font-size: 30px;\n\n  justify-content: flex-end;\n  align-items: center;\n  svg {\n    width: 20px;\n  }\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledInput = styled.input`\n  color: ${theme.FontColor};\n  background-color: transparent;\n  border: solid 2px ${theme.FontColor};\n  border-radius: 5px;\n  height: 35px;\n  font-size: 17px;\n  transition: 0.4s;\n  width: 60%;\n  margin-left: 10px;\n`;\n\nconst Input = () => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n    document.location.href = `/search/${keyword}`;\n  };\n\n  const handleOnChange = (event) => {\n    const innnerWord = event.target.value;\n    setKeyword(innnerWord);\n  };\n\n  return (\n    <Wrapper>\n      <StyledForm onSubmit={handleOnSubmit}>\n        <svg\n          aria-hidden=\"true\"\n          focusable=\"false\"\n          data-prefix=\"fas\"\n          data-icon=\"search\"\n          class=\"svg-inline--fa fa-search fa-w-16\"\n          role=\"img\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 512 512\"\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"\n          ></path>\n        </svg>\n\n        <StyledInput\n          onChange={handleOnChange}\n          type=\"text\"\n          placeholder=\"제목\"\n          value={keyword}\n        />\n      </StyledForm>\n    </Wrapper>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport theme from \"../styles/theme\";\nimport Input from \"./Input\";\n\nconst NavDiv = styled.header.attrs({\n  className: \"nav-div\",\n})`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  color: ${theme.FontColor};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${theme.NavBgColor};\n  z-index: 10;\n`;\n\nconst BannerNavWrapper = styled.div.attrs({\n  className: \"nav-div-wrapper\",\n})`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${theme.NavBgColor};\n`;\n\nconst BannerText = styled(Link)`\n  font-weight: 800;\n  font-size: 30px;\n  color: ${theme.BannerColor};\n`;\n\nconst NavWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n`;\n\nconst EachLink = styled(Link)`\n  margin: 0 10px 0 10px;\n  font-weight: 800;\n  font-size: 15px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? theme.EtcColor : \"transparent\")};\n`;\n\nconst BannerNav = styled.div`\n  margin: 15px 15px 15px 15px;\n`;\n\nconst EachNav = styled.div`\n  height: 100%;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <NavDiv>\n    <BannerNavWrapper>\n      <BannerNav>\n        <BannerText to=\"/\">Ratflix</BannerText>\n      </BannerNav>\n      <NavWrapper>\n        <EachNav>\n          <EachLink to=\"/\" current={pathname === \"/\"}>\n            Home\n          </EachLink>\n        </EachNav>\n        <EachNav>\n          <EachLink to=\"/movies\" current={pathname === \"/movies\"}>\n            Movies\n          </EachLink>\n        </EachNav>\n        <EachNav>\n          <EachLink to=\"/tv\" current={pathname === \"/tv\"}>\n            TV\n          </EachLink>\n        </EachNav>\n      </NavWrapper>\n    </BannerNavWrapper>\n    <Input />\n  </NavDiv>\n));\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"b5e85de9c4ef4fd54037405bf63ab4d7\",\n    language: \"ko-KR\",\n  },\n});\n\nconst seachForApi = (keyword) =>\n  axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n      api_key: \"b5e85de9c4ef4fd54037405bf63ab4d7\",\n      language: \"ko-KR\",\n      query: `${keyword}`,\n    },\n  });\n\nconst getNowPlayMovies = api.get(\"movie/now_playing/\");\nconst getPopMovies = api.get(\"movie/popular/\");\nconst getTopRatedMovies = api.get(\"movie/top_rated/\");\nconst getDetailMovie = (movie_id) => api.get(`movie/${movie_id}`);\nconst getVideoMovie = (movie_id) => api.get(`movie/${movie_id}/videos`);\n\nconst getOnTheAirPrograms = api.get(\"tv/on_the_air/\");\nconst getPopPrograms = api.get(\"tv/popular/\");\nconst getTopRatedPrograms = api.get(\"tv/top_rated/\");\nconst getDetailPrograms = (tv_id) => api.get(`tv/${tv_id}`);\n\nconst getSearchMovie = (keyword) => seachForApi(keyword).get(\"search/movie\");\nconst getSearchProgram = (keyword) => seachForApi(keyword).get(\"search/tv\");\n\nconst apis = {\n  movies: {\n    getNowPlayMovies,\n    getPopMovies,\n    getTopRatedMovies,\n    getDetailMovie,\n    getVideoMovie,\n  },\n  tvprograms: {\n    getOnTheAirPrograms,\n    getPopPrograms,\n    getTopRatedPrograms,\n    getDetailPrograms,\n  },\n  search: {\n    getSearchMovie,\n    getSearchProgram,\n  },\n  baseUrl: \"https://image.tmdb.org/t/p/w500\",\n  youTubeUrl: \"https://www.youtube.com/watch?v=\",\n};\n\nexport default apis;\n","import React, { useEffect, useState } from \"react\";\nimport { createContext } from \"react\";\nimport apis from \"../apis/api\";\n\nconst ApiContext = createContext();\n\nconst ApiProvider = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [firstMovie, setFirstMovie] = useState({});\n  const [now, setNow] = useState([]);\n  const [pop, setPop] = useState([]);\n  const [top, setTop] = useState([]);\n  const [onAirTv, setOnAirTv] = useState([]);\n  const [popTv, setPopTv] = useState([]);\n  const [topTv, setTopTv] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        //movie\n        const apiNowData = await apis.movies.getNowPlayMovies;\n        const nowData = apiNowData.data.results;\n\n        const apiPopData = await apis.movies.getPopMovies;\n        const popData = apiPopData.data.results;\n\n        const apiTopData = await apis.movies.getTopRatedMovies;\n        const topData = apiTopData.data.results;\n        //tv\n        const apiOnAir = await apis.tvprograms.getOnTheAirPrograms;\n        const onAirData = apiOnAir.data.results;\n\n        const apiPopTv = await apis.tvprograms.getPopPrograms;\n        const popTvData = apiPopTv.data.results;\n\n        const apiTopTv = await apis.tvprograms.getOnTheAirPrograms;\n        const topTvData = apiTopTv.data.results;\n\n        //movie\n        setNow(nowData);\n        setPop(popData);\n        setTop(topData);\n        //tv\n        setOnAirTv(onAirData);\n        setPopTv(popTvData);\n        setTopTv(topTvData);\n\n        setFirstMovie({\n          id: popData[0].id,\n          overview: popData[0].overview,\n          poster_path: popData[0].poster_path,\n          title: popData[0].title,\n          vote_average: popData[0].vote_average,\n        });\n\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  const value = { isLoading, now, pop, top, onAirTv, popTv, topTv, firstMovie };\n  return (\n    <ApiContext.Provider value={value}>{props.children}</ApiContext.Provider>\n  );\n};\n\nexport { ApiContext, ApiProvider };\n","import React from \"react\";\n\nexport default function Loader() {\n  return (\n    <svg\n      className=\"spinner\"\n      width=\"65px\"\n      height=\"65px\"\n      viewBox=\"0 0 66 66\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        className=\"path\"\n        fill=\"none\"\n        strokeWidth=\"6\"\n        strokeLinecap=\"round\"\n        cx=\"33\"\n        cy=\"33\"\n        r=\"30\"\n      ></circle>\n    </svg>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport apis from \"../../apis/api\";\nimport theme from \"../../styles/theme\";\n\nconst MoviesDiv = styled.div.attrs({\n  className: \"grid-box\",\n})`\n  display: grid;\n  grid-gap: 15px;\n`;\n\nconst MovieDiv = styled.div`\n  width: 100%;\n  :hover {\n    .score-text {\n      display: block;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)``;\n\nconst ImageDiv = styled.div`\n  height: 20vh;\n  border-radius: 8px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n`;\n\nconst TittleDiv = styled.div`\n  color: ${theme.FontColor};\n  margin: 1vh 0 1vh 0;\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst ScoreDiv = styled.div.attrs({\n  className: \"score-text\",\n})`\n  color: ${theme.EtcColor};\n  font-size: 15px;\n  font-weight: 800;\n  margin: 0 5px 5px 0;\n  display: none;\n`;\n\nconst Movies = (props) => {\n  const { movieData } = props;\n\n  if (movieData.length !== 0) {\n    return (\n      <MoviesDiv>\n        {movieData?.map((each) => {\n          const { id, vote_average, title, poster_path } = each;\n          const posterUrl = `${apis.baseUrl + poster_path}`;\n          return (\n            <MovieDiv>\n              <StyledLink key={id} to={`/movies/${id}`}>\n                <ImageDiv\n                  style={{\n                    background: `url(${posterUrl})`,\n                    backgroundPosition: \"center center\",\n                    backgroundSize: \"cover\",\n                  }}\n                >\n                  <ScoreDiv>{`${vote_average} / 10.0`}</ScoreDiv>\n                </ImageDiv>\n              </StyledLink>\n              <TittleDiv>{title}</TittleDiv>{\" \"}\n            </MovieDiv>\n          );\n        })}\n      </MoviesDiv>\n    );\n  } else if (movieData.length === 0) {\n    return <TittleDiv>검색결과가 없습니다.</TittleDiv>;\n  }\n};\n\nexport default Movies;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ApiContext } from \"../Context/ApiContext\";\nimport theme from \"../styles/theme\";\nimport Loader from \"./Loader\";\nimport Movies from \"./fragment/Movies\";\nimport { Helmet } from \"react-helmet\";\n\nconst Wrapper = styled.div`\n  margin: 8vh 10px 10px 10px;\n  color: ${theme.FontColor};\n`;\n\nconst LoaderWrapper = styled.div.attrs({\n  className: \"flex-box\",\n})`\n  margin-top: 30vh;\n`;\nconst TitleText = styled.h1`\n  font-size: 35px;\n  font-weight: 800;\n  margin-bottom: 3vh;\n  margin-top: 3vh;\n`;\n\nconst Movie = (props) => {\n  const apiContext = useContext(ApiContext);\n  const { now, pop, top, isLoading } = apiContext;\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Movies - Ratflix</title>\n      </Helmet>\n      {isLoading && (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n      {!isLoading && (\n        <>\n          <TitleText>{`${theme.nowContents}`}</TitleText>\n          <Movies movieData={now} />\n\n          <TitleText>{`${theme.popContents}`}</TitleText>\n          <Movies movieData={pop} />\n\n          <TitleText>{`${theme.topContents}`}</TitleText>\n          <Movies movieData={top} />\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport apis from \"../../apis/api.js\";\nimport theme from \"../../styles/theme.js\";\n\nconst MoviesDiv = styled.div.attrs({\n  className: \"grid-box\",\n})`\n  display: grid;\n  grid-gap: 15px;\n`;\n\nconst MovieDiv = styled.div`\n  width: 100%;\n  :hover {\n    .score-text {\n      display: block;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)``;\n\nconst ImageDiv = styled.div`\n  height: 20vh;\n  border-radius: 8px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n`;\n\nconst TittleDiv = styled.div`\n  color: ${theme.FontColor};\n  margin: 1vh 0 1vh 0;\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst ScoreDiv = styled.div.attrs({\n  className: \"score-text\",\n})`\n  color: ${theme.EtcColor};\n  font-size: 15px;\n  font-weight: 800;\n  margin: 0 5px 5px 0;\n  display: none;\n`;\n\nconst TvPrograms = (props) => {\n  const tvData = props.tvData;\n  if (tvData.length !== 0) {\n    return (\n      <MoviesDiv>\n        {tvData.map((each) => {\n          const { id, vote_average, name, poster_path } = each;\n          const posterUrl = `${apis.baseUrl + poster_path}`;\n          return (\n            <MovieDiv>\n              <StyledLink key={id} to={`/tv/${id}`}>\n                <ImageDiv\n                  style={{\n                    background: `url(${posterUrl})`,\n                    backgroundPosition: \"center center\",\n                    backgroundSize: \"cover\",\n                  }}\n                >\n                  <ScoreDiv>{`${vote_average} / 10.0`}</ScoreDiv>\n                </ImageDiv>\n              </StyledLink>\n              <TittleDiv>{name}</TittleDiv>{\" \"}\n            </MovieDiv>\n          );\n        })}\n      </MoviesDiv>\n    );\n  } else if (tvData.length === 0) {\n    return <TittleDiv>검색결과가 없습니다.</TittleDiv>;\n  }\n};\n\nexport default TvPrograms;\n","import React, { useContext } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport apis from \"../apis/api\";\nimport { ApiContext } from \"../Context/ApiContext\";\nimport theme from \"../styles/theme\";\nimport TvPrograms from \"./fragment/TvPrograms\";\nimport Loader from \"./Loader\";\n\nconst Wrapper = styled.div`\n  margin: 8vh 10px 10px 10px;\n  color: ${theme.FontColor};\n`;\n\nconst LoaderWrapper = styled.div.attrs({\n  className: \"flex-box\",\n})`\n  margin-top: 30vh;\n`;\n\nconst TitleText = styled.h1`\n  font-size: 35px;\n  font-weight: 800;\n  margin-bottom: 3vh;\n  margin-top: 3vh;\n`;\n\nconst TvProgram = (props) => {\n  const apiContext = useContext(ApiContext);\n  const { onAirTv, popTv, topTv, isLoading } = apiContext;\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>TV programs - Ratflix</title>\n      </Helmet>\n      {isLoading && (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n      {!isLoading && (\n        <>\n          <TitleText>{`${theme.nowContents}`}</TitleText>\n          <TvPrograms tvData={onAirTv} />\n\n          <TitleText>{`${theme.popContents}`}</TitleText>\n          <TvPrograms tvData={popTv} />\n\n          <TitleText>{`${theme.topContents}`}</TitleText>\n          <TvPrograms tvData={topTv} />\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default TvProgram;\n","import React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useRouteMatch } from \"react-router\";\nimport styled from \"styled-components\";\nimport apis from \"../apis/api\";\nimport theme from \"../styles/theme\";\nimport Movies from \"./fragment/Movies\";\nimport TvPrograms from \"./fragment/TvPrograms\";\nimport Loader from \"./Loader\";\n\nconst Wrapper = styled.div`\n  margin: 8vh 10px 10px 10px;\n  color: ${theme.FontColor};\n`;\n\nconst LoaderWrapper = styled.div.attrs({\n  className: \"flex-box\",\n})`\n  margin-top: 30vh;\n`;\nconst TitleText = styled.h1`\n  font-size: 35px;\n  font-weight: 800;\n  margin-bottom: 3vh;\n  margin-top: 3vh;\n`;\n\nconst Search = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieData, setMovieData] = useState([]);\n  const [tvData, setTvData] = useState([]);\n  const match = useRouteMatch();\n  const keyword = match.params.keyword;\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const movieSearch = await apis.search.getSearchMovie(keyword);\n        const tvSearch = await apis.search.getSearchProgram(keyword);\n        const movieResults = movieSearch.data.results;\n        const tvResults = tvSearch.data.results;\n        setMovieData(movieResults);\n        setTvData(tvResults);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  return (\n    <Wrapper>\n      {isLoading && (\n        <>\n          <Helmet>\n            <title>Loading</title>\n          </Helmet>\n          <LoaderWrapper>\n            <Loader />\n          </LoaderWrapper>\n        </>\n      )}\n      <Helmet>\n        <title>{`${keyword}`} - Ratflix</title>\n      </Helmet>\n      {!isLoading && (\n        <>\n          <TitleText>{`${keyword} : 영화 검색 결과`}</TitleText>\n          <Movies movieData={movieData} />\n        </>\n      )}\n      {!isLoading && (\n        <>\n          <TitleText>{`${keyword} : TV프로그램 검색 결과`}</TitleText>\n          <TvPrograms tvData={tvData} />\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Search;\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport apis from \"../apis/api\";\nimport { ApiContext } from \"../Context/ApiContext\";\nimport theme from \"../styles/theme\";\n\nconst Wrapper = styled.div.attrs({\n  className: \"main-wrapper\",\n})`\n  margin-top: 7vh;\n  height: 60vh;\n  width: 100%;\n  color: ${theme.FontColor};\n  border-radius: 5px;\n`;\n\nconst BackgroundLayer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  padding: 10px 10px 10px 10px;\n`;\n\nconst TextDiv = styled.div.attrs({\n  className: \"main-textdiv\",\n})`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1.attrs({ className: \"home-maiv-tittle\" })``;\n\nconst OverView = styled.h3.attrs({ className: \"home-main-over\" })``;\n\nconst TextMiddleDiv = styled.div``;\n\nconst TextBottonDiv = styled.div`\n  font-size: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 600;\n`;\n\nconst TextAverage = styled.div`\n  font-size: 30px;\n  color: ${theme.EtcColor};\n  padding: 15px 20px 15px 20px;\n`;\n\nconst StyledLink = styled(Link)`\n  background-color: ${theme.ButtonColor};\n  padding: 15px 20px 15px 20px;\n  border-radius: 10px;\n`;\n\nconst MainMovie = () => {\n  const apiContext = useContext(ApiContext);\n  const movieData = apiContext.firstMovie;\n  const { id, overview, poster_path, title, vote_average } = movieData;\n  const posterUrl = `${apis.baseUrl}${poster_path}`;\n\n  return (\n    <Wrapper\n      style={{\n        background: `url(${posterUrl})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <BackgroundLayer>\n        <TextDiv>\n          <Title>{title}</Title>\n\n          <TextMiddleDiv>\n            <OverView>{overview}</OverView>\n          </TextMiddleDiv>\n\n          <TextBottonDiv>\n            <StyledLink to={`/movies/${id}`}>상세정보</StyledLink>\n            <TextAverage>{vote_average} / 10.0</TextAverage>\n          </TextBottonDiv>\n        </TextDiv>\n      </BackgroundLayer>\n    </Wrapper>\n  );\n};\n\nexport default MainMovie;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport apis from \"../apis/api\";\nimport { ApiContext } from \"../Context/ApiContext\";\nimport theme from \"../styles/theme\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst MovieWrapper = styled.div``;\nconst TvWrapper = styled.div`\n  margin-top: 3vh;\n`;\n\nconst Tittle = styled.h1`\n  font-size: 30px;\n  font-weight: 600;\n  margin-bottom: 3vh;\n`;\nconst ImageDiv = styled.div.attrs({\n  className: \"swiper-imagediv\",\n})`\n  height: 240px;\n  object-fit: fit;\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n  border-radius: 8px;\n\n  :hover {\n    .score-text {\n      display: block;\n    }\n  }\n`;\nconst RatingScore = styled.div.attrs({\n  className: \"score-text\",\n})`\n  color: ${theme.EtcColor};\n  font-size: 15px;\n  font-weight: 800;\n  margin: 0 5px 5px 0;\n  display: none;\n`;\n\nconst StyledLink = styled(Link)``;\n\nconst Slider = (props) => {\n  const apiContext = useContext(ApiContext);\n  const isLoading = apiContext.isLoading;\n  const popMovie = apiContext.pop;\n  const popTv = apiContext.popTv;\n\n  return (\n    <Wrapper>\n      <MovieWrapper>\n        <Tittle>Ratflix 인기 영화 콘텐츠</Tittle>\n        <Swiper\n          spaceBetween={10}\n          breakpoints={{\n            480: {\n              width: 480,\n              slidesPerView: 1,\n            },\n            640: {\n              width: 640,\n              slidesPerView: 2,\n            },\n            1060: {\n              width: 1060,\n              slidesPerView: 3,\n            },\n          }}\n          onSlideChange={() => console.log(\"slide change\")}\n          onSwiper={(swiper) => console.log(swiper)}\n        >\n          {!isLoading &&\n            popMovie.map((each) => {\n              const { id, vote_average, poster_path } = each;\n              const posterUrl = `${apis.baseUrl + poster_path}`;\n              return (\n                <SwiperSlide>\n                  <StyledLink key={id} to={`/movies/${id}`}>\n                    <ImageDiv\n                      style={{\n                        background: `url(${posterUrl})`,\n                        backgroundSize: \"cover\",\n                        backgroundPosition: \"center center\",\n                      }}\n                    >\n                      <RatingScore>{`${vote_average} / 10`}</RatingScore>\n                    </ImageDiv>\n                  </StyledLink>\n                </SwiperSlide>\n              );\n            })}\n        </Swiper>\n      </MovieWrapper>\n      <TvWrapper>\n        <Tittle>Ratflix 인기 TV 콘텐츠</Tittle>\n        <Swiper\n          spaceBetween={10}\n          breakpoints={{\n            480: {\n              width: 480,\n              slidesPerView: 1,\n            },\n            640: {\n              width: 640,\n              slidesPerView: 2,\n            },\n            1060: {\n              width: 1060,\n              slidesPerView: 3,\n            },\n          }}\n          onSlideChange={() => console.log(\"slide change\")}\n          onSwiper={(swiper) => console.log(swiper)}\n        >\n          {!isLoading &&\n            popTv.map((each) => {\n              const { id, vote_average, poster_path } = each;\n              const posterUrl = `${apis.baseUrl + poster_path}`;\n              return (\n                <SwiperSlide>\n                  <StyledLink key={id} to={`/movies/${id}`}>\n                    <ImageDiv\n                      style={{\n                        background: `url(${posterUrl})`,\n                      }}\n                    >\n                      <RatingScore>{`${vote_average} / 10`}</RatingScore>\n                    </ImageDiv>\n                  </StyledLink>\n                </SwiperSlide>\n              );\n            })}\n        </Swiper>\n      </TvWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Slider;\n","import React, { useContext } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { ApiContext } from \"../Context/ApiContext\";\nimport theme from \"../styles/theme\";\nimport Loader from \"./Loader\";\nimport MainMovie from \"./MainMovie\";\nimport Slider from \"./Slider\";\n\nconst Wrapper = styled.div.attrs({\n  className: \"home-wrapper-div\",\n})`\n  width: 100%;\n`;\n\nconst MainFrameDiv = styled.div``;\n\nconst SliderDiv = styled.div`\n  color: ${theme.FontColor};\n  margin: 50px 10px 50px 10px;\n  width: 100%;\n`;\n\nconst LoaderWrapper = styled.div.attrs({\n  className: \"flex-box\",\n})`\n  margin-top: 30vh;\n`;\n\nconst Home = () => {\n  const apiContext = useContext(ApiContext);\n  const isLoading = apiContext.isLoading;\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Ratflix</title>\n      </Helmet>\n      {isLoading && (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n      {!isLoading && (\n        <>\n          <MainFrameDiv>\n            <MainMovie />\n          </MainFrameDiv>\n          <SliderDiv>\n            <Slider />\n          </SliderDiv>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport apis from \"../../apis/api\";\nimport theme from \"../../styles/theme\";\nimport Loader from \"../Loader\";\nimport ReactPlayer from \"react-player/youtube\";\n\nconst Wrapper = styled.div`\n  margin: 7vh 10px 10px 10px;\n  height: 100%;\n  color: ${theme.FontColor};\n`;\n\nconst BackgroundDiv = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst BackgroundLayerDiv = styled.div.attrs({\n  className: \"detail-layout-div\",\n})`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PosterDiv = styled.div.attrs({\n  className: \"detail-poster-div\",\n})`\n  padding: 5vh 25px 10vh 0;\n  width: 40%;\n  height: 100%;\n`;\nconst ContentsDiv = styled.div.attrs({\n  className: \"detail-contents-div\",\n})`\n  padding: 5vh 0px 10vh 25px;\n  width: 40%;\n  height: 100%;\n`;\n\nconst Tittle = styled.h1`\n  font-size: 27px;\n  font-weight: 800;\n  line-height: 1.5em;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\nconst Genre = styled.h2`\n  font-size: 15px;\n  font-weight: 600;\n  line-height: 2.5em;\n`;\n\nconst NavMenu = styled.ul`\n  display: flex;\n  font-weight: 600;\n  align-items: center;\n`;\nconst EachMenu = styled.li`\n  background-color: ${theme.ButtonColor};\n  padding: 7px 10px 7px 10px;\n  margin-right: 15px;\n  border-radius: 5px;\n`;\n\nconst LoaderWrapper = styled.div.attrs({\n  className: \"flex-box\",\n})`\n  margin-top: 30vh;\n`;\n\nconst ContentDiv = styled.div``;\nconst VideoDiv = styled.div`\n  margin: 30px 0 0 0;\n`;\n\nconst MovieDetail = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [detailData, setDetailData] = useState({});\n  const params = useParams();\n  const id = params.id;\n  const match = useRouteMatch();\n  const { path, url } = match;\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const response = await apis.movies.getDetailMovie(id);\n        const videoData = await apis.movies.getVideoMovie(id);\n        const videoUrl = videoData.data.results[0].key;\n        const {\n          genres,\n          homepage,\n          poster_path,\n          overview,\n          tagline,\n          title,\n          vote_average,\n          runtime,\n          release_date,\n        } = response.data;\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\n        const youtubeUrl = `${apis.youTubeUrl}${videoUrl}`;\n        const year = new Date(release_date).getFullYear();\n        setDetailData({\n          genres,\n          homepage,\n          fullPosterUrl,\n          overview,\n          tagline,\n          title,\n          vote_average,\n          runtime,\n          year,\n          youtubeUrl,\n        });\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  return (\n    <Wrapper>\n      {isLoading && (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n      {!isLoading && (\n        <BackgroundDiv\n          style={{\n            background: `url(${detailData.fullPosterUrl})`,\n            backgroundPosition: \"center center\",\n            backgroundSize: \"cover\",\n          }}\n        >\n          <BackgroundLayerDiv>\n            <PosterDiv>\n              <img\n                src={`${detailData.fullPosterUrl}`}\n                style={{}}\n                alt={detailData.title}\n              />\n            </PosterDiv>\n            <ContentsDiv>\n              <Tittle>{detailData.title}</Tittle>\n              <Genre>{`${detailData.year} • ${detailData.runtime}min`}</Genre>\n              <Genre>\n                {detailData?.genres?.map((each) => {\n                  const name = each.name;\n                  return <span>{`${name} `}</span>;\n                })}\n              </Genre>\n              <NavMenu>\n                <EachMenu>\n                  <a target=\"_blank\" href={detailData.homepage}>\n                    홈페이지\n                  </a>\n                </EachMenu>\n                <EachMenu>\n                  <NavLink exact to={url}>\n                    설명\n                  </NavLink>\n                </EachMenu>\n                <EachMenu>\n                  <NavLink exact to={`${url}/video`}>\n                    예고\n                  </NavLink>\n                </EachMenu>\n              </NavMenu>\n\n              <ContentDiv>\n                <Switch>\n                  <Route exact path={`${path}`}>\n                    <Tittle>{detailData.tagline}</Tittle>\n                    <Genre>{detailData.overview}</Genre>\n                  </Route>\n                  <Route exact path={`${path}/video`}>\n                    <VideoDiv>\n                      <ReactPlayer width=\"100%\" url={detailData.youtubeUrl} />\n                    </VideoDiv>\n                  </Route>\n                </Switch>\n              </ContentDiv>\n            </ContentsDiv>\n          </BackgroundLayerDiv>\n        </BackgroundDiv>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MovieDetail;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport apis from \"../../apis/api\";\n\nconst VideoDiv = styled.div.attrs({\n  className: \"grid-box-seaaon\",\n})`\n  margin: 30px 0 0 0;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-gap: 15px;\n`;\nconst GridContent = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst GridImageDiv = styled.div`\n  width: 100%;\n  height: 15vh;\n`;\n\nconst NameHead = styled.h1`\n  font-weight: 600;\n  font-size: 20px;\n`;\nconst YearHead = styled.h2`\n  font-weight: 600;\n  font-size: 15px;\n`;\n\nconst Season = (props) => {\n  const { seasons } = props;\n  console.log(seasons);\n  return (\n    <VideoDiv>\n      {seasons?.map((each) => {\n        const { name, poster_path, air_date, episode_count } = each;\n        const year = new Date(air_date).getFullYear();\n        const fullPosterSeason = `${apis.baseUrl}${poster_path}`;\n        if (episode_count !== 0) {\n          return (\n            <GridContent>\n              <GridImageDiv\n                style={{\n                  background: `url(${fullPosterSeason})`,\n                  backgroundPosition: \"center center\",\n                  backgroundSize: \"cover\",\n                }}\n              ></GridImageDiv>\n              <div>\n                <NameHead>{name}</NameHead>\n                <YearHead>{year}</YearHead>\n              </div>\n            </GridContent>\n          );\n        }\n      })}\n    </VideoDiv>\n  );\n};\n\nexport default Season;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport apis from \"../../apis/api\";\nimport theme from \"../../styles/theme\";\nimport Loader from \"../Loader\";\nimport Season from \"./Season\";\n\nconst Wrapper = styled.div`\n  margin: 7vh 10px 10px 10px;\n  height: 100%;\n  color: ${theme.FontColor};\n`;\n\nconst BackgroundDiv = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst BackgroundLayerDiv = styled.div.attrs({\n  className: \"detail-layout-div\",\n})`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PosterDiv = styled.div.attrs({\n  className: \"detail-poster-div\",\n})`\n  width: 100%;\n  height: 100%;\n`;\nconst ContentsDiv = styled.div.attrs({\n  className: \"detail-contents-div\",\n})`\n  padding: 5vh 0px 10vh 25px;\n  width: 40%;\n  height: 100%;\n`;\n\nconst Tittle = styled.h1`\n  font-size: 27px;\n  font-weight: 800;\n  line-height: 1.5em;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\nconst Genre = styled.h2`\n  font-size: 15px;\n  font-weight: 600;\n  line-height: 2.5em;\n`;\n\nconst NavMenu = styled.ul`\n  display: flex;\n  font-weight: 600;\n  align-items: center;\n`;\nconst EachMenu = styled.li`\n  background-color: ${theme.ButtonColor};\n  padding: 7px 10px 7px 10px;\n  margin-right: 15px;\n  border-radius: 5px;\n`;\n\nconst LoaderWrapper = styled.div.attrs({\n  className: \"flex-box\",\n})`\n  margin-top: 30vh;\n`;\n\nconst ContentDiv = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst TvDetail = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [detailData, setDetailData] = useState({});\n  const params = useParams();\n  const id = params.id;\n  const match = useRouteMatch();\n  const { path, url } = match;\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const response = await apis.tvprograms.getDetailPrograms(id);\n        const {\n          episode_run_time,\n          genres,\n          homepage,\n          poster_path,\n          seasons,\n          overview,\n          name,\n          last_air_date,\n        } = response.data;\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\n        const year = new Date(last_air_date).getFullYear();\n        setDetailData({\n          genres,\n          homepage,\n          fullPosterUrl,\n          overview,\n          name,\n          seasons,\n          episode_run_time,\n          year,\n        });\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  return (\n    <Wrapper>\n      {isLoading && (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n      {!isLoading && (\n        <BackgroundDiv\n          style={{\n            background: `url(${detailData.fullPosterUrl})`,\n            backgroundPosition: \"center center\",\n            backgroundSize: \"cover\",\n          }}\n        >\n          <BackgroundLayerDiv>\n            <PosterDiv>\n              <img src={`${detailData.fullPosterUrl}`} alt={detailData.name} />\n            </PosterDiv>\n            <ContentsDiv>\n              <Tittle>{detailData.name}</Tittle>\n              <Genre>{`${detailData.year} • ${detailData.episode_run_time}min`}</Genre>\n              <Genre>\n                {detailData?.genres?.map((each) => {\n                  const name = each.name;\n                  return `${name} `;\n                })}\n              </Genre>\n              <NavMenu>\n                <EachMenu>\n                  <a\n                    target=\"_blank\"\n                    href={detailData.homepage}\n                    rel=\"noreferrer\"\n                  >\n                    홈페이지\n                  </a>\n                </EachMenu>\n                <EachMenu>\n                  <NavLink exact to={url}>\n                    설명\n                  </NavLink>\n                </EachMenu>\n                <EachMenu>\n                  <NavLink exact to={`${url}/seasons`}>\n                    시즌\n                  </NavLink>\n                </EachMenu>\n              </NavMenu>\n\n              <ContentDiv>\n                <Switch>\n                  <Route exact path={`${path}`}>\n                    <Genre>{detailData.overview}</Genre>\n                  </Route>\n                  <Route exact path={`${path}/seasons`}>\n                    <Season seasons={detailData.seasons} />\n                  </Route>\n                </Switch>\n              </ContentDiv>\n            </ContentsDiv>\n          </BackgroundLayerDiv>\n        </BackgroundDiv>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default TvDetail;\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Movie from \"./components/Movie\";\nimport TvProgram from \"./components/TvProgram\";\nimport Search from \"./components/Search\";\nimport Home from \"./components/Home\";\nimport styled from \"styled-components\";\nimport MovieDetail from \"./components/Detail/MovieDetail\";\nimport TvDetail from \"./components/Detail/TvDetail\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/movies\">\n            <Movie />\n          </Route>\n          <Route exact path=\"/tv\">\n            <TvProgram />\n          </Route>\n          <Route exact path=\"/search/:keyword\">\n            <Search />\n          </Route>\n          <Route path=\"/movies/:id\">\n            <MovieDetail />\n          </Route>\n          <Route path=\"/tv/:id\">\n            <TvDetail />\n          </Route>\n        </Switch>\n      </Router>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport theme from \"./theme\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset}\n\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        \n        font-size:14px;\n        background-color:${theme.BgColor};\n        font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\n    }\n    \n    a{\n        text-decoration:none;\n        color:inherit;\n        cursor: pointer;\n    }\n    ol, ul, li {\n        list-style: none;\n    }\n    img {\n        display: block;\n        width: 100%;\n        height: 100%;\n    }\n    input, button {\n        background-color: transparent;\n    }\n    h1, h2, h3, h4, h5, h6 {\n    font-family:'Maven Pro', sans-serif;\n  }\n  .flex-box {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  \n   /*Loader*/\n \n  .spinner {\n    animation: rotator 1.4s linear infinite;\n  }\n  \n  @keyframes rotator {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(270deg);\n    }\n  }\n  .path {\n    stroke-dasharray: 187;\n    stroke-dashoffset: 0;\n    transform-origin: center;\n    animation: dash 1.4s ease-in-out infinite, colors 5.6s ease-in-out infinite;\n  }\n  \n  @keyframes colors {\n    0% {\n      stroke: #4285f4;\n    }\n    25% {\n      stroke: #de3e35;\n    }\n    50% {\n      stroke: #f7c223;\n    }\n    75% {\n      stroke: #1b9a59;\n    }\n    100% {\n      stroke: #4285f4;\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dashoffset: 187;\n    }\n    50% {\n      stroke-dashoffset: 46.75;\n      transform: rotate(135deg);\n    }\n    100% {\n      stroke-dashoffset: 187;\n      transform: rotate(450deg);\n    }\n  }\n  \n\n  \n  \n}`;\n\nexport default GlobalStyles;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  .swiper-container {\n    width: 100%;\n  }\n\n  @media (min-width: 100px) {\n    .grid-box {\n      grid-template-columns: repeat(1, minmax(100px, 1fr));\n    }\n    .grid-box-seaaon {\n      grid-template-columns: repeat(1, minmax(200px, 1fr));\n    }\n\n    .detail-layout-div {\n      flex-direction: column;\n    }\n    .detail-poster-div {\n      padding: 0 0 0 0;\n      width: 90%;\n    }\n    .detail-contents-div {\n      padding: 0 0 0 0;\n      width: 90%;\n      margin-bottom: 100px;\n    }\n    .home-maiv-tittle {\n      font-size: 50px;\n      font-weight: 800;\n    }\n    .home-main-over {\n      font-size: 20px;\n      font-weight: 400;\n      line-height: 30px;\n    }\n  }\n  .swiper-imagediv {\n    width: 480px;\n    height: 300px;\n  }\n\n  @media (min-width: 640px) {\n    .grid-box {\n      grid-template-columns: repeat(3, minmax(150px, 1fr));\n    }\n    .grid-box-seaaon {\n      grid-template-columns: repeat(3, minmax(200px, 1fr));\n    }\n\n    .swiper-imagediv {\n      width: 310px;\n    }\n    .detail-layout-div {\n      flex-direction: column;\n    }\n    .detail-poster-div {\n      padding: 0 0 0 0;\n      width: 80%;\n    }\n    .detail-contents-div {\n      padding: 0 0 0 0;\n      width: 80%;\n      margin-bottom: 100px;\n    }\n    .home-maiv-tittle {\n      font-size: 60px;\n      font-weight: 800;\n    }\n    .home-main-over {\n      font-size: 25px;\n      font-weight: 400;\n      line-height: 30px;\n    }\n  }\n  @media (min-width: 1000px) {\n    .grid-box {\n      grid-template-columns: repeat(5, minmax(200px, 1fr));\n    }\n    .grid-box-seaaon {\n      grid-template-columns: repeat(4, minmax(200px, 1fr));\n    }\n\n    .swiper-imagediv {\n      width: 350px;\n    }\n    .detail-layout-div {\n      flex-direction: row;\n    }\n    .detail-poster-div {\n      padding: 5vh 25px 10vh 0;\n      width: 40%;\n    }\n    .detail-contents-div {\n      padding: 5vh 0px 10vh 25px;\n      width: 40%;\n    }\n    .home-maiv-tittle {\n      font-size: 70px;\n      font-weight: 800;\n    }\n    .home-main-over {\n      font-size: 28px;\n      font-weight: 400;\n      line-height: 35px;\n    }\n  }\n\n  /* Landscape 모드일 때 적용할 CSS */\n  @media (min-height: 0px) {\n    .nav-div {\n      height: 15vh;\n    }\n    .nav-div-wrapper {\n      height: 15vh;\n    }\n    .home-wrapper-div {\n      margin-top: 17vh;\n    }\n  }\n  /* Portrait 모드일 때 적용할 CSS */\n  @media (min-height: 400px) {\n    .nav-div {\n      height: 6vh;\n    }\n    .nav-div-wrapper {\n      height: 6vh;\n    }\n    .home-wrapper-div {\n      margin-top: 8vh;\n    }\n  }\n`;\n\nconst ResponsiveStyles = (props) => {\n  return <Wrapper>{props.children}</Wrapper>;\n};\n\nexport default ResponsiveStyles;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport GlobalStyles from \"./styles/GlobalStyles\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"./styles/theme\";\nimport \"swiper/swiper.scss\";\nimport { ApiProvider } from \"./Context/ApiContext\";\nimport ResponsiveStyles from \"./styles/ResponsiveStyles\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApiProvider>\n      <ThemeProvider theme={theme}>\n\n      <ResponsiveStyles>\n        <App />\n\n      </ResponsiveStyles>\n     \n      </ThemeProvider>\n      <GlobalStyles />\n    </ApiProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}